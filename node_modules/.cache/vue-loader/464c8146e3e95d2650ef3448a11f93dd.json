{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue","mtime":1589126266056},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIlRhYmxlR2VuZXJhdG9yIiwKICAgIGNvbXBvbmVudHM6IHt9LAogICAgcHJvcHM6IFsndGFibGVfZGF0YSddLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzdG9yZTogc3RvcmUsCiAgICAgICAgICAgIHRhYmxlX2lkOiAnJywKICAgICAgICAgICAgc3R1ZGVudHM6ICcnLAogICAgICAgICAgICBncmFkZXNfdHlwZXM6ICcnLAogICAgICAgICAgICBzZWxlY3RlZF9jb2x1bW5fdHlwZTogJycsCiAgICAgICAgICAgIGNob29zZWRfY29sdW1uX3R5cGU6ICcnLAogICAgICAgICAgICBjdXN0b21fY29sdW1uX3R5cGU6ICcnLAogICAgICAgICAgICBjdXJyZW50X2dyYWRlOiAnJywKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFkZF9jb2x1bW46IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IF90ID0gdGhpcwoKICAgICAgICAgICAgaWYgKF90LmNob29zZWRfY29sdW1uX3R5cGUgPT09ICfQodCy0L7QuSDQstCw0YDQuNCw0L3RgicpIHsKICAgICAgICAgICAgICAgIGlmIChfdC5jdXN0b21fY29sdW1uX3R5cGUgIT09ICcnKSB7CiAgICAgICAgICAgICAgICAgICAgX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGUgPSBfdC5jdXN0b21fY29sdW1uX3R5cGUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHtfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZSA9IF90LmNob29zZWRfY29sdW1uX3R5cGV9CgogICAgICAgICAgICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoX3QuZ3JhZGVzX3R5cGVzKSkgewogICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gdGhpcy5zZWxlY3RlZF9jb2x1bW5fdHlwZSkgewogICAgICAgICAgICAgICAgICAgIF90LmdyYWRlc190eXBlc1trZXldICs9MQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChfdC5ncmFkZXNfdHlwZXNbX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGVdID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIF90LiRzZXQoX3QuZ3JhZGVzX3R5cGVzLCBfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZSwgMSkKCiAgICAgICAgICAgICAgICBsZXQgb3JkZXJlZF90eXBlcyA9IHt9CiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhfdC5ncmFkZXNfdHlwZXMpLnNvcnQoKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkgewogICAgICAgICAgICAgICAgICAgIG9yZGVyZWRfdHlwZXNba2V5XSA9IF90LmdyYWRlc190eXBlc1trZXldOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF90LmdyYWRlc190eXBlcyA9IG9yZGVyZWRfdHlwZXMKICAgICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICBsZXQgc3R1ZGVudHNfd2l0aF9zb3J0ZWRfZ3JhZGVzID0gW10KICAgICAgICAgICAgICAgIGZvciAobGV0IHN0dWRlbnQgb2YgdGhpcy5zdHVkZW50cykgewogICAgICAgICAgICAgICAgICAgIGxldCBvcmRlcmVkX3R5cGVzX2Zvcl9zdHVkZW50ID0ge30KICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhzdHVkZW50LmdyYWRlcykuc29ydCgpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7CiAgICAgICAgICAgICAgICAgICAgb3JkZXJlZF90eXBlc19mb3Jfc3R1ZGVudFtrZXldID0gc3R1ZGVudC5ncmFkZXNba2V5XTsKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIHN0dWRlbnQuZ3JhZGVzID0gb3JkZXJlZF90eXBlc19mb3Jfc3R1ZGVudAogICAgICAgICAgICAgICAgICAgIHN0dWRlbnRzX3dpdGhfc29ydGVkX2dyYWRlcy5wdXNoKHN0dWRlbnQpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLnN0dWRlbnRzID0gc3R1ZGVudHNfd2l0aF9zb3J0ZWRfZ3JhZGVzCiAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgZGF0YSA9IHthY3Rpb246ICdhZGRfY29sdW1uJywgcGFyYW1zOiB7dGFibGVfaWQ6IF90LnRhYmxlX2lkLCBjb2x1bW5fdHlwZTogX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGV9fQogICAgICAgICAgICBheGlvcyh7dXJsOiBgaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yL2AsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnfSkKICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgICAgICAgICAgIGxldCBuZXdfZ3JhZGVzID0gcmVzcC5kYXRhLnBhcmFtcy5uZXdfZ3JhZGVzCiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgc3R1ZGVudCBvZiBfdC5zdHVkZW50cykgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZSBpbiBzdHVkZW50LmdyYWRlcykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90LiRzZXQoc3R1ZGVudC5ncmFkZXMsIF90LnNlbGVjdGVkX2NvbHVtbl90eXBlLCBbXSkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBzdHVkZW50LmdyYWRlc1tfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZV0ucHVzaChuZXdfZ3JhZGVzW3N0dWRlbnQuaWRdKQogICAgICAgICAgICAgICAgICAgICAgICAvLwogICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3R1ZGVudHNfd2l0aF9zb3J0ZWRfZ3JhZGVzID0gW10KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgc3R1ZGVudCBvZiB0aGlzLnN0dWRlbnRzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgb3JkZXJlZF90eXBlc19mb3Jfc3R1ZGVudCA9IHt9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhzdHVkZW50LmdyYWRlcykuc29ydCgpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmRlcmVkX3R5cGVzX2Zvcl9zdHVkZW50W2tleV0gPSBzdHVkZW50LmdyYWRlc1trZXldOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0dWRlbnQuZ3JhZGVzID0gb3JkZXJlZF90eXBlc19mb3Jfc3R1ZGVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R1ZGVudHNfd2l0aF9zb3J0ZWRfZ3JhZGVzLnB1c2goc3R1ZGVudCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0dWRlbnRzID0gc3R1ZGVudHNfd2l0aF9zb3J0ZWRfZ3JhZGVzCiAgICAgICAgICAgICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhLnBhcmFtcy5tZXNzYWdlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZGVsZXRlX2NvbHVtbjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgX3QgPSB0aGlzCgogICAgICAgICAgICBpZiAoX3QuY2hvb3NlZF9jb2x1bW5fdHlwZSA9PT0gJ9Ch0LLQvtC5INCy0LDRgNC40LDQvdGCJykgewogICAgICAgICAgICAgICAgaWYgKF90LmN1c3RvbV9jb2x1bW5fdHlwZSAhPT0gJycpIHsKICAgICAgICAgICAgICAgICAgICBfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZSA9IF90LmN1c3RvbV9jb2x1bW5fdHlwZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2Uge190LnNlbGVjdGVkX2NvbHVtbl90eXBlID0gX3QuY2hvb3NlZF9jb2x1bW5fdHlwZX0KCiAgICAgICAgICAgIGlmIChfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZSBpbiBfdC5ncmFkZXNfdHlwZXMpIHsKICAgICAgICAgICAgICAgICBsZXQgZGVsZXRlZF9ncmFkZXNfaWRzID0gW10KICAgICAgICAgICAgICAgICBmb3IgKGxldCBzdHVkZW50IG9mIF90LnN0dWRlbnRzKSB7CiAgICAgICAgICAgICAgICAgICAgIGxldCBsYXN0X2dyYWRlX2luX3R5cGUgPSBzdHVkZW50LmdyYWRlc1tfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZV1bc3R1ZGVudC5ncmFkZXNbX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGVdLmxlbmd0aCAtIDFdCiAgICAgICAgICAgICAgICAgICAgIGxldCBsYXN0X2dyYWRlX2luX3R5cGVfaWQgPSBsYXN0X2dyYWRlX2luX3R5cGUuaWQKICAgICAgICAgICAgICAgICAgICAgZGVsZXRlZF9ncmFkZXNfaWRzLnB1c2gobGFzdF9ncmFkZV9pbl90eXBlX2lkKQogICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHthY3Rpb246ICdkZWxldGVfY29sdW1uJywgcGFyYW1zOiB7dGFibGVfaWQ6IF90LnRhYmxlX2lkLCBncmFkZXNfaWRzOiBkZWxldGVkX2dyYWRlc19pZHN9fQogICAgICAgICAgICAgICAgIGF4aW9zKHt1cmw6IGBodHRwOi8vbG9jYWxob3N0OjYwNjAvYXBpL3RhYmxlX2NyZWF0b3IvYCwgZGF0YTogZGF0YSwgbWV0aG9kOiAnUE9TVCd9KQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3AuZGF0YS5yZXN1bHQgPT09ICdvaycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgc3R1ZGVudCBvZiBfdC5zdHVkZW50cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R1ZGVudC5ncmFkZXNbX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGVdLnBvcCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3R1ZGVudC5ncmFkZXNbX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGVdIDw9IDApIGRlbGV0ZSBzdHVkZW50LmdyYWRlc1tfdC5zZWxlY3RlZF9jb2x1bW5fdHlwZV0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoX3QuZ3JhZGVzX3R5cGVzKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gX3Quc2VsZWN0ZWRfY29sdW1uX3R5cGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdC5ncmFkZXNfdHlwZXNba2V5XSAtPTEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3QuZ3JhZGVzX3R5cGVzW2tleV0gPD0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgX3QuZ3JhZGVzX3R5cGVzW2tleV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3AuZGF0YS5wYXJhbXMubWVzc2FnZSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzYXZlX3RhYmxlOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgbGV0IGFsbF9ncmFkZXMgPSB7fQogICAgICAgICAgICBmb3IgKGxldCBzdHVkZW50IG9mIHRoaXMuc3R1ZGVudHMpIHsKICAgICAgICAgICAgICAgIGZvciAobGV0IHR5cGUgaW4gc3R1ZGVudC5ncmFkZXMpIHsKICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBncmFkZSBvZiBzdHVkZW50LmdyYWRlc1t0eXBlXSkKICAgICAgICAgICAgICAgICAgICBhbGxfZ3JhZGVzW2dyYWRlLmlkXSA9IGdyYWRlLmdyYWRlX3ZhbHVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIGxldCBkYXRhID0ge2FjdGlvbjogJ3NhdmVfdGFibGUnLCBwYXJhbXM6IHt0YWJsZV9pZDogdGhpcy50YWJsZV9pZCwgYWxsX2dyYWRlczogYWxsX2dyYWRlc319CiAgICAgICAgICBheGlvcyh7dXJsOiBgaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yL2AsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnfSkKICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgICAgICAgICAgIHRoaXMubWFrZV90b2FzdCgn0KHQvtGF0YDQsNC90LXQvdC40LUnLCAn0KLQsNCx0LvQuNGG0LAg0YHQvtGF0YDQsNC90LXQvdCwJykKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMubWFrZV90b2FzdCgn0KHQvtGF0YDQsNC90LXQvdC40LUnLCAn0J7RiNC40LHQutCwINC/0YDQuCDRgdC+0YXRgNCw0L3QtdC90LjQuCcpCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhLnBhcmFtcy5tZXNzYWdlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQoKICAgICAgICB9LAogICAgICAgIC8vYWRkaXRpb25hbCBmdW5jdGlvbnMKICAgICAgICBjb21wYXJlX2dyYWRlczogZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgaWYgKGEuZ3JhZGVfdHlwZSA8IGIuZ3JhZGVfdHlwZSkKICAgICAgICAgICAgICAgIHJldHVybiAtMQogICAgICAgICAgICBpZiAoYS5ncmFkZV90eXBlID4gYi5ncmFkZV90eXBlKQogICAgICAgICAgICAgICAgcmV0dXJuIDEKICAgICAgICAgICAgcmV0dXJuIDAKICAgICAgICB9LAogICAgICAgIG1ha2VfdG9hc3Q6IGZ1bmN0aW9uIChldmVudF90eXBlLCBtZXNzYWdlLCBhcHBlbmQ9ZmFsc2UpIHsKICAgICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChtZXNzYWdlLCB7CiAgICAgICAgICAgICAgICB0aXRsZTogZXZlbnRfdHlwZSwKICAgICAgICAgICAgICAgIGF1dG9IaWRlRGVsYXk6IDUwMDAsCiAgICAgICAgICAgICAgICBhcHBlbmRUb2FzdDogYXBwZW5kCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy50YWJsZV9pZCA9IHRoaXMudGFibGVfZGF0YS5pZAogICAgICAgIHRoaXMuc3R1ZGVudHMgPSB0aGlzLnRhYmxlX2RhdGEuc3R1ZGVudHNfYW5kX2dyYWRlcwogICAgICAgIHRoaXMuZ3JhZGVzX3R5cGVzID0gdGhpcy50YWJsZV9kYXRhLmdyYWRlc190eXBlcwogICAgfQp9CgoK"},{"version":3,"sources":["TableGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"TableGenerator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"table-generator\">\n        <b-card>\n            <b-card-body style=\"text-align: center\">\n                <div class=\"mb-3\">\n                    <b-form-select style=\"width: 14vw; display: inline\" v-model=\"choosed_column_type\">\n                        <b-form-select-option v-for=\"type in store.state.col_types\" :key=\"type\" v-bind:value=\"type\">{{type}}</b-form-select-option>\n                    </b-form-select>\n                    <b-form-input class=\"ml-5\" style=\"width: 14vw; display: inline\" v-model=\"custom_column_type\" v-show=\"choosed_column_type === 'Свой вариант'\" type='text' placeholder='Укажите свой вариант'/>\n                </div>\n                <b-form-group>\n                    <b-button squared variant=\"outline-dark\" @click=\"add_column\" class=\"mr-3\">Добавить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"delete_column\" class=\"mr-3\">Удалить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"save_table\" class=\"mr-3\">Сохранить таблицу</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"\" class=\"mr-3\">Скачать файл (.xls)</b-button>\n                </b-form-group>\n            </b-card-body>\n        </b-card>\n        <b-card>\n            <b-card-body>\n                <div class=\"table-wrapper\">\n                    <table border=\"2\" style=\"margin: auto\" ref=\"grades_table\">\n                        <thead>\n                            <tr>\n                                <th rowspan=\"2\">\n                                    ФИО\n                                </th>\n                                <th v-for=\"(num, name) in grades_types\" :key=\"name\" :colspan=\"num\" class=\"table-head-cell\">\n                                    {{name}}\n                                </th>\n                            </tr>\n                            <tr>\n                                <template v-for=\"(num, name) in grades_types\">\n                                    <th v-for=\"n in num\" class=\"table-grade-cell\">\n                                        № {{n}}\n                                    </th>\n                                </template>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr v-for=\"student in students\">\n                               <td class=\"table-fio-cell\">\n                                    {{student.fio}}\n                               </td>\n                                <template v-for=\"grade_type in student.grades\">\n                                    <td v-for=\"grade in grade_type\">\n                                        <div v-show=\"current_grade !== grade.id\">\n                                            <span @mouseenter=\"current_grade = grade.id\" class=\"grade-span\">{{grade.grade_value}}</span>\n                                        </div>\n                                        <b-input class=\"grade-input\"\n                                                 v-show=\"current_grade === grade.id\"\n                                                 v-model=\"grade.grade_value\"\n                                                 @mouseleave=\"current_grade = ''\"\n                                                 @keyup.enter=\"current_grade = ''\"/>\n                                    </td>\n                                </template>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </b-card-body>\n\n        </b-card>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n\n    export default {\n        name: \"TableGenerator\",\n        components: {},\n        props: ['table_data'],\n        data() {\n            return {\n                store: store,\n                table_id: '',\n                students: '',\n                grades_types: '',\n                selected_column_type: '',\n                choosed_column_type: '',\n                custom_column_type: '',\n                current_grade: '',\n            }\n        },\n        methods: {\n            add_column: function () {\n                let _t = this\n\n                if (_t.choosed_column_type === 'Свой вариант') {\n                    if (_t.custom_column_type !== '') {\n                        _t.selected_column_type = _t.custom_column_type\n                    }\n                }\n                else {_t.selected_column_type = _t.choosed_column_type}\n\n                for (let [key, value] of Object.entries(_t.grades_types)) {\n                    if (key === this.selected_column_type) {\n                        _t.grades_types[key] +=1\n                    }\n                }\n                if (_t.grades_types[_t.selected_column_type] === undefined) {\n                    _t.$set(_t.grades_types, _t.selected_column_type, 1)\n\n                    let ordered_types = {}\n                    Object.keys(_t.grades_types).sort().forEach(function(key) {\n                        ordered_types[key] = _t.grades_types[key];\n                    })\n                    _t.grades_types = ordered_types\n                    /*\n                    let students_with_sorted_grades = []\n                    for (let student of this.students) {\n                        let ordered_types_for_student = {}\n                        Object.keys(student.grades).sort().forEach(function(key) {\n                        ordered_types_for_student[key] = student.grades[key];\n                        })\n                        student.grades = ordered_types_for_student\n                        students_with_sorted_grades.push(student)\n                    }\n                    this.students = students_with_sorted_grades\n                    */\n                }\n\n                let data = {action: 'add_column', params: {table_id: _t.table_id, column_type: _t.selected_column_type}}\n                axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        let new_grades = resp.data.params.new_grades\n                        for (let student of _t.students) {\n                            if (!(_t.selected_column_type in student.grades)) {\n                                _t.$set(student.grades, _t.selected_column_type, [])\n                            }\n                            student.grades[_t.selected_column_type].push(new_grades[student.id])\n                            //\n                            let students_with_sorted_grades = []\n                            for (let student of this.students) {\n                                let ordered_types_for_student = {}\n                                Object.keys(student.grades).sort().forEach(function(key) {\n                                ordered_types_for_student[key] = student.grades[key];\n                                })\n                                student.grades = ordered_types_for_student\n                                students_with_sorted_grades.push(student)\n                            }\n                            this.students = students_with_sorted_grades\n                            //\n                        }\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            delete_column: function () {\n                var _t = this\n\n                if (_t.choosed_column_type === 'Свой вариант') {\n                    if (_t.custom_column_type !== '') {\n                        _t.selected_column_type = _t.custom_column_type\n                    }\n                }\n                else {_t.selected_column_type = _t.choosed_column_type}\n\n                if (_t.selected_column_type in _t.grades_types) {\n                     let deleted_grades_ids = []\n                     for (let student of _t.students) {\n                         let last_grade_in_type = student.grades[_t.selected_column_type][student.grades[_t.selected_column_type].length - 1]\n                         let last_grade_in_type_id = last_grade_in_type.id\n                         deleted_grades_ids.push(last_grade_in_type_id)\n                     }\n                     let data = {action: 'delete_column', params: {table_id: _t.table_id, grades_ids: deleted_grades_ids}}\n                     axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                    .then(resp => {\n                        if (resp.data.result === 'ok') {\n                            for (let student of _t.students) {\n                                student.grades[_t.selected_column_type].pop()\n                                if (student.grades[_t.selected_column_type] <= 0) delete student.grades[_t.selected_column_type]\n                            }\n                            for (let [key, value] of Object.entries(_t.grades_types)) {\n                                if (key === _t.selected_column_type) {\n                                    _t.grades_types[key] -=1\n                                    if (_t.grades_types[key] <= 0) {\n                                        delete _t.grades_types[key]\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            console.log(resp.data.params.message)\n                        }\n                    })\n                }\n            },\n            save_table: function() {\n                let all_grades = {}\n                for (let student of this.students) {\n                    for (let type in student.grades) {\n                        for (let grade of student.grades[type])\n                        all_grades[grade.id] = grade.grade_value\n                    }\n                }\n              let data = {action: 'save_table', params: {table_id: this.table_id, all_grades: all_grades}}\n              axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.make_toast('Сохранение', 'Таблица сохранена')\n                    }\n                    else {\n                        this.make_toast('Сохранение', 'Ошибка при сохранении')\n                        console.log(resp.data.params.message)\n                    }\n                })\n\n            },\n            //additional functions\n            compare_grades: function (a, b) {\n                if (a.grade_type < b.grade_type)\n                    return -1\n                if (a.grade_type > b.grade_type)\n                    return 1\n                return 0\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 5000,\n                    appendToast: append\n                })\n            }\n        },\n        created() {\n            this.table_id = this.table_data.id\n            this.students = this.table_data.students_and_grades\n            this.grades_types = this.table_data.grades_types\n        }\n    }\n\n\n</script>\n\n<style scoped>\n    .table-wrapper {\n        margin-top: 30px;\n    }\n    .table-grade-cell {\n        min-width: 50px;\n    }\n    .table-head-cell {\n        padding: 5px;\n    }\n    .table-fio-cell {\n        padding-left: 5px;\n        padding-right: 5px;\n    }\n    table {\n        overflow: hidden;\n    }\n    tr:hover {\n        background-color: #e4fffa;\n    }\n\n    td:hover::after,\n    th:hover::after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      top: -5000px;\n      height: 100px;\n      width: 100%;\n      z-index: -1;\n    }\n\n    .grade-span {\n        display: block;\n        box-sizing: border-box;\n        width: 100%;\n        height: 25px;\n    }\n\n    .grade-input {\n        position: center;\n        width: 50px;\n        height: 25px;\n    }\n</style>"]}]}