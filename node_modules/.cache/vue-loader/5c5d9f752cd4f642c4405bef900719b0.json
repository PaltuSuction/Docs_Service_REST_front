{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/CreateTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/CreateTable.vue","mtime":1588451503644},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIkNyZWF0ZVRhYmxlIiwKICAgIGNvbXBvbmVudHM6IHsKCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBhbGxfZGlyZWN0aW9uczogJycsCiAgICAgICAgICAgIHNlbGVjdGVkX2RpcmVjdGlvbjogJycsCiAgICAgICAgICAgIGdyb3Vwc19vbl9kaXJlY3Rpb246IFtdLAogICAgICAgICAgICBzZWxlY3RlZF9ncm91cDogJycsCiAgICAgICAgICAgIHN0dWRlbnRzX2luX3NlbGVjdGVkX2dyb3VwOiAnJywKICAgICAgICAgICAgbmV3X3RhYmxlX25hbWU6ICcnLAoKICAgICAgICAgICAgdGFibGU6IHsKICAgICAgICAgICAgICAgIGZpZWxkczoge251bWJlcjogJ+KElicsIGZpbzogJ9Ck0JjQnicsIGZpbmFsX3Njb3JlOiAn0JjRgtC+0LPQvtCy0LDRjyDQvtGG0LXQvdC60LAnfSwKICAgICAgICAgICAgICAgIGl0ZW1zOiBbXQogICAgICAgICAgICB9LAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZmV0Y2hfZ3JvdXBzOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIC8vIGRhdGEgPSB7J3N0dWR5aW5nX2RpcmVjdGlvbic6IHRoaXMuc3R1ZHlpbmdfZGlyZWN0aW9ufQogICAgICAgICAgICBheGlvcy5nZXQoYGh0dHA6Ly9sb2NhbGhvc3Q6NjA2MC9hcGkvZ3JvdXBzX2J5X2RpcmVjdC8ke3RoaXMuc2VsZWN0ZWRfZGlyZWN0aW9ufS9gKQogICAgICAgICAgICAudGhlbihyZXNwID0+ICh0aGlzLmdyb3Vwc19vbl9kaXJlY3Rpb24gPSByZXNwLmRhdGEucGFyYW1zLmdyb3Vwc19udW1iZXJzKSkKICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IChjb25zb2xlLmxvZyhlcnJvcikpKQogICAgICAgIH0sCiAgICAgICAgY3JlYXRlX3RhYmxlOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgbGV0IGRhdGEgPSB7J2FjdGlvbic6ICdjcmVhdGVfbmV3JywKICAgICAgICAgICAgICAgIHBhcmFtczogeydncm91cF9udW1iZXInOiB0aGlzLnNlbGVjdGVkX2dyb3VwLCAnbmV3X3RhYmxlX25hbWUnOiB0aGlzLm5ld190YWJsZV9uYW1lfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGF4aW9zKHt1cmw6ICdodHRwOi8vbG9jYWxob3N0OjYwNjAvYXBpL3RhYmxlX2NyZWF0b3IvJywgZGF0YTogZGF0YSwgbWV0aG9kOiAnUE9TVCd9KQogICAgICAgICAgICAudGhlbihyZXNwID0+ICh0aGlzLmZldGNoX3N0dWRlbnRzX2luZm8ocmVzcC5kYXRhLnBhcmFtcy5zdHVkZW50cykpKQogICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4oY29uc29sZS5sb2coZXJyb3IpKSkKICAgICAgICB9LAogICAgICAgIGZldGNoX3N0dWRlbnRzX2luZm86IGZ1bmN0aW9uIChzdHVkZW50c19pbl9zZWxlY3RlZF9ncm91cCkgewogICAgICAgICAgICBsZXQgaW5fZ3JvdXBfbnVtYmVyID0gMQogICAgICAgICAgICBmb3IgKGxldCBzdHVkZW50IG9mIHN0dWRlbnRzX2luX3NlbGVjdGVkX2dyb3VwKSB7CiAgICAgICAgICAgICAgICBsZXQgZmlvID0gc3R1ZGVudC5sYXN0X25hbWUgKyAnICcgKyBzdHVkZW50LmZpcnN0X25hbWUgKyAnICcgKyBzdHVkZW50Lm1pZGRsZV9uYW1lCiAgICAgICAgICAgICAgICBsZXQgdGlja2V0X251bWJlciA9IHN0dWRlbnQudGlja2V0X251bWJlcgogICAgICAgICAgICAgICAgdGhpcy50YWJsZS5pdGVtcy5wdXNoKHsn4oSWJzogaW5fZ3JvdXBfbnVtYmVyLCAn0KTQmNCeJzogZmlvLCAnZmluYWxfc2NvcmUnOiAnJ30pCiAgICAgICAgICAgICAgICBpbl9ncm91cF9udW1iZXIgKz0gMQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgIGxldCBkYXRhID0geydhY3Rpb24nOiAnZ2V0X2RpcmVjdGlvbnMnfQogICAgICAgICBheGlvcyh7dXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnfSkKICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiAodGhpcy5hbGxfZGlyZWN0aW9ucyA9IHJlc3AuZGF0YS5wYXJhbXMuZGlyZWN0aW9uc19uYW1lcykpCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9Pihjb25zb2xlLmxvZyhlcnJvcikpKQogICAgfQp9Cg=="},{"version":3,"sources":["CreateTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"\">\n         <div class=\"card\">\n             <div class=\"card-body\">\n                 <b-form-group label=\"Укажите группу и название таблицы\" class=\"mt-2 creation-settings-form\">\n                     <div class=\"row\">\n                         <b-form-select id=\"discipline\" v-model=\"selected_direction\" class=\"tablegen-select-direct mt-2\" @change=\"fetch_groups\">\n                             <template v-slot:first>\n                                <b-form-select-option :value=\"''\" disabled>-- Направление подготовки --</b-form-select-option>\n                             </template>\n                             <b-form-select-option v-for=\"direction in all_directions\" v-bind:value=\"direction.name\">\n                                 {{ $store.state.direction_decryption[direction.name] }}\n                             </b-form-select-option>\n                         </b-form-select>\n                         <b-form-select id=\"discipline\" v-model=\"selected_group\" class=\"tablegen-select-group mt-2\">\n                             <template v-slot:first>\n                                <b-form-select-option :value=\"''\" disabled>-- Группа --</b-form-select-option>\n                             </template>\n                            <b-form-select-option v-for=\"group_number in groups_on_direction\" v-bind:value=\"group_number\">{{group_number}}</b-form-select-option>\n                         </b-form-select>\n                        <b-input class=\"tablegen-input-name mt-2\" placeholder=\"Название таблицы\" v-model=\"new_table_name\"/>\n                     </div>\n                     <b-button secondary type=\"submit\" value=\"Создать\" class=\"mt-2\" @click=\"create_table\">Создать таблицу</b-button>\n                 </b-form-group>\n             </div>\n         </div>\n\n        <!--<b-table striped hover bordered :items=\"table.items\" :fields=\"table.fields\" class='scores-table'>\n          <template v-slot:cell(final_score)=\"row\">\n            <b-form-input v-model=\"row.item['final_score']\"/>\n          </template>\n        </b-table> -->\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n\n    export default {\n        name: \"CreateTable\",\n        components: {\n\n        },\n        data() {\n            return {\n                all_directions: '',\n                selected_direction: '',\n                groups_on_direction: [],\n                selected_group: '',\n                students_in_selected_group: '',\n                new_table_name: '',\n\n                table: {\n                    fields: {number: '№', fio: 'ФИО', final_score: 'Итоговая оценка'},\n                    items: []\n                },\n            }\n        },\n        methods: {\n            fetch_groups: function () {\n                // data = {'studying_direction': this.studying_direction}\n                axios.get(`http://localhost:6060/api/groups_by_direct/${this.selected_direction}/`)\n                .then(resp => (this.groups_on_direction = resp.data.params.groups_numbers))\n                .catch(error => (console.log(error)))\n            },\n            create_table: function() {\n                let data = {'action': 'create_new',\n                    params: {'group_number': this.selected_group, 'new_table_name': this.new_table_name}\n                }\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => (this.fetch_students_info(resp.data.params.students)))\n                .catch(error =>(console.log(error)))\n            },\n            fetch_students_info: function (students_in_selected_group) {\n                let in_group_number = 1\n                for (let student of students_in_selected_group) {\n                    let fio = student.last_name + ' ' + student.first_name + ' ' + student.middle_name\n                    let ticket_number = student.ticket_number\n                    this.table.items.push({'№': in_group_number, 'ФИО': fio, 'final_score': ''})\n                    in_group_number += 1\n                }\n            }\n        },\n        created() {\n             let data = {'action': 'get_directions'}\n             axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => (this.all_directions = resp.data.params.directions_names))\n                .catch(error =>(console.log(error)))\n        }\n    }\n</script>\n\n<style scoped>\n    .creation-settings-form {\n        text-align: center;\n    }\n    .tablegen-select-direct {\n        width: 28vw;\n        margin-left: 5px;\n        margin-right: 5px;\n    }\n    .tablegen-select-group {\n        width: 10vw;\n        margin-left: 5px;\n        margin-right: 5px;\n    }\n    .tablegen-input-name {\n        width: 15vw;\n        margin-left: 5px;\n        margin-right: 5px;\n    }\n\n    .scores-table {\n        margin-top: 15px;\n    }\n</style>"]}]}