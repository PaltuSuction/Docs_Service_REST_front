{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue","mtime":1589048903656},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci9pbmRleCcKaW1wb3J0IFRhYmxlRWRpdFZpZXcgZnJvbSAiLi4vdmlld3MvVGFibGVFZGl0VmlldyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiQWxsVGFibGVzIiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBUYWJsZUVkaXRWaWV3CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIGFsbF9hdXRob3JfdGFibGVzOiBbXSwKICAgICAgICB9CgogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBmZXRjaF90YWJsZXNfaW5mbzogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsZXQgZGF0YSA9IHsnYWN0aW9uJzogJ2dldF9hbGwnLCBwYXJhbXM6IHsnYXV0aG9yLXRva2VuJzogc3RvcmUuc3RhdGUudG9rZW59fQogICAgICAgICAgICBheGlvcyh7dXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnfSkKICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsX2F1dGhvcl90YWJsZXMgPSBbXQogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IHRhYmxlIG9mIHJlc3AuZGF0YS5wYXJhbXMuYWxsX2F1dGhvcl90YWJsZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGF1dGhvcl90YWJsZSA9IHt9CiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsnaWQnXSA9IHRhYmxlWydpZCddCiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfbmFtZSddID0gdGFibGVbJ3RhYmxlX25hbWUnXQogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ3RhYmxlX2dyb3VwX251bWJlciddID0gdGFibGVbJ3RhYmxlX2dyb3VwX251bWJlciddCiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfY3JlYXRlZF9hdCddID0gdGhpcy5nZXRfY29ycmVjdF9kYXRlKHRhYmxlWyd0YWJsZV9jcmVhdGVkX2F0J10pCiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfdXBkYXRlZF9hdCddID0gdGhpcy5nZXRfY29ycmVjdF9kYXRlKHRhYmxlWyd0YWJsZV91cGRhdGVkX2F0J10pCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsX2F1dGhvcl90YWJsZXMucHVzaChhdXRob3JfdGFibGUpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwINC/0YDQuCDQt9Cw0LPRgNGD0LfQutC1INGB0L/QuNGB0LrQsCDRgtCw0LHQu9C40YYnKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQoKICAgICAgICB9LAogICAgICAgIGVkaXRfdGFibGU6IGZ1bmN0aW9uICh0YWJsZV9pZCkgewogICAgICAgICAgICBzdG9yZS5zdGF0ZS5zZWxlY3RlZF90YWJsZV9pZCA9IHRhYmxlX2lkCiAgICAgICAgICAgIHJvdXRlci5wdXNoKCcvZWRpdF90YWJsZScpCiAgICAgICAgfSwKICAgICAgICBkZWxldGVfdGFibGU6IGZ1bmN0aW9uICh0YWJsZV9pZCkgewogICAgICAgICAgICBsZXQgZGF0YSA9IHsnYWN0aW9uJzogJ2RlbGV0ZV90YWJsZScsICdwYXJhbXMnOiB7J3RhYmxlX2lkJzogdGFibGVfaWR9fQogICAgICAgICAgICBheGlvcyh7dXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnfSkKICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgICAgICAgICAgIHRoaXMuZmV0Y2hfdGFibGVzX2luZm8oKQogICAgICAgICAgICAgICAgICAgIHRoaXMubWFrZV90b2FzdCgn0KPQtNCw0LvQtdC90LjQtScsICfQotCw0LHQu9C40YbQsCDRg9C00LDQu9C10L3QsCcpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwLmRhdGEucGFyYW1zLm1lc3NhZ2UpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBjcmVhdGVfZG9jdW1lbnQ6IGZ1bmN0aW9uICh0YWJsZV9pZCkgewogICAgICAgICAgICBsZXQgZGF0YSA9IHsnYWN0aW9uJzogJ2NyZWF0ZV9kb2N1bWVudCcsICdwYXJhbXMnOiB7J3RhYmxlX2lkJzogdGFibGVfaWR9fQogICAgICAgICAgICBheGlvcyh7dXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnLCByZXNwb25zZVR5cGU6ICdibG9iJ30pCiAgICAgICAgICAgIC8qIC50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlc3AuZGF0YS5yZXN1bHQgPT09ICdvaycpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm1ha2VfdG9hc3QoJ9Ch0L7Qt9C00LDQvdC40LUg0LTQvtC60YPQvNC10L3RgtCwJywgJ9CU0L7QutGD0LzQtdC90YIg0YHQvtC30LTQsNC9INGD0YHQv9C10YjQvdC+JykKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMubWFrZV90b2FzdCgn0KHQvtC30LTQsNC90LjQtSDQtNC+0LrRg9C80LXQvdGC0LAnLCAn0J7RiNC40LHQutCwINC/0YDQuCDRgdC+0LfQtNCw0L3QuNC4INC00L7QutGD0LzQtdC90YLQsCcpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pICovCiAgICAgICAgICAgICAgICAudGhlbihyZXNwID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwKQogICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGVVUkwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbcmVzcC5kYXRhXSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpbGVMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogICAgICAgICAgICAgICAgICAgICAgICAgZmlsZUxpbmsuaHJlZiA9IGZpbGVVUkw7CiAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlTGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ2ZpbGUueGxzJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZpbGVMaW5rKTsKICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVMaW5rLmNsaWNrKCk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gKGNvbnNvbGUubG9nKGVycm9yKSkpCiAgICAgICAgfSwKICAgICAgICAvLyBBZGRpdGlvbmFsIG1ldGhvZHMKICAgICAgICBnZXRfY29ycmVjdF9kYXRlOiBmdW5jdGlvbiAoZGF0ZV9zdHJpbmcpIHsKICAgICAgICAgICAgIGxldCBkYXRlT2JqID0gbmV3IERhdGUoZGF0ZV9zdHJpbmcpCiAgICAgICAgICAgICBsZXQgbW9udGggPSBzdG9yZS5zdGF0ZS5tb250aF9uYW1lc1tkYXRlT2JqLmdldE1vbnRoKCldOwogICAgICAgICAgICAgbGV0IGRheSA9IFN0cmluZyhkYXRlT2JqLmdldERhdGUoKSkucGFkU3RhcnQoMiwgJzAnKTsKICAgICAgICAgICAgIGxldCB5ZWFyID0gZGF0ZU9iai5nZXRGdWxsWWVhcigpOwogICAgICAgICAgICAgbGV0IGhvdXIgPSBkYXRlT2JqLmdldEhvdXJzKCk7CiAgICAgICAgICAgICBsZXQgbWludXRlcyA9IFN0cmluZyhkYXRlT2JqLmdldE1pbnV0ZXMoKSkucGFkU3RhcnQoMiwgJzAnKQogICAgICAgICAgICAgcmV0dXJuIGhvdXIgKyAnOicgKyBtaW51dGVzICsgJywgJyArIGRheSArICcgJyArIG1vbnRoICsgJywgJyArIHllYXIKICAgICAgICB9LAogICAgICAgIG1ha2VfdG9hc3Q6IGZ1bmN0aW9uIChldmVudF90eXBlLCBtZXNzYWdlLCBhcHBlbmQ9ZmFsc2UpIHsKICAgICAgICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChtZXNzYWdlLCB7CiAgICAgICAgICAgICAgICB0aXRsZTogZXZlbnRfdHlwZSwKICAgICAgICAgICAgICAgIGF1dG9IaWRlRGVsYXk6IDMwMDAsCiAgICAgICAgICAgICAgICBhcHBlbmRUb2FzdDogYXBwZW5kCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZmV0Y2hfdGFibGVzX2luZm8oKQogICAgfQp9Cg=="},{"version":3,"sources":["AllTables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllTables.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"all-tables\">\n        <h2>Здесь будут все таблицы, созданные текущим пользователем</h2>\n        <div style=\"text-align: center\">\n            <b-card v-for=\"table in all_author_tables\" class=\"table-card\" :key=\"table.table_id\">\n                <b-card-title>\n                    <b>{{table.table_name}}, группа {{table.table_group_number}}</b>\n                </b-card-title>\n               <b-card-body style=\"text-align: left\">\n                   Направление: <b>Нет Поля</b> <br/>\n                   Дата создания: {{table.table_created_at}} <br/>\n                   Дата последнего редактирования: {{table.table_updated_at}} <br/>\n               </b-card-body>\n               <b-card-footer>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"edit_table(table.id)\">Редактировать</b-btn>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"delete_table(table.id)\">Удалить</b-btn>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"create_document(table.id)\">Скачать файл (.xls)</b-btn>\n               </b-card-footer>\n            </b-card>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n    import router from '../router/index'\n    import TableEditView from \"../views/TableEditView\";\n\n    export default {\n        name: \"AllTables\",\n        components: {\n            TableEditView\n        },\n        data() {\n            return{\n                all_author_tables: [],\n            }\n\n        },\n        methods: {\n            fetch_tables_info: function () {\n                let data = {'action': 'get_all', params: {'author-token': store.state.token}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.all_author_tables = []\n                        for (let table of resp.data.params.all_author_tables) {\n                            let author_table = {}\n                            author_table['id'] = table['id']\n                            author_table['table_name'] = table['table_name']\n                            author_table['table_group_number'] = table['table_group_number']\n                            author_table['table_created_at'] = this.get_correct_date(table['table_created_at'])\n                            author_table['table_updated_at'] = this.get_correct_date(table['table_updated_at'])\n                            this.all_author_tables.push(author_table)\n                        }\n                    } else {\n                        console.log('Ошибка при загрузке списка таблиц')\n                    }\n                })\n\n            },\n            edit_table: function (table_id) {\n                store.state.selected_table_id = table_id\n                router.push('/edit_table')\n            },\n            delete_table: function (table_id) {\n                let data = {'action': 'delete_table', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.fetch_tables_info()\n                        this.make_toast('Удаление', 'Таблица удалена')\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            create_document: function (table_id) {\n                let data = {'action': 'create_document', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST', responseType: 'blob'})\n                /* .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.make_toast('Создание документа', 'Документ создан успешно')\n                    }\n                    else {\n                        this.make_toast('Создание документа', 'Ошибка при создании документа')\n                    }\n                }) */\n                    .then(resp => {\n                        console.log(resp)\n                             var fileURL = window.URL.createObjectURL(new Blob([resp.data]));\n                             var fileLink = document.createElement('a');\n                             fileLink.href = fileURL;\n                             fileLink.setAttribute('download', 'file.xls');\n                             document.body.appendChild(fileLink);\n                             fileLink.click();\n                    })\n                .catch(error => (console.log(error)))\n            },\n            // Additional methods\n            get_correct_date: function (date_string) {\n                 let dateObj = new Date(date_string)\n                 let month = store.state.month_names[dateObj.getMonth()];\n                 let day = String(dateObj.getDate()).padStart(2, '0');\n                 let year = dateObj.getFullYear();\n                 let hour = dateObj.getHours();\n                 let minutes = String(dateObj.getMinutes()).padStart(2, '0')\n                 return hour + ':' + minutes + ', ' + day + ' ' + month + ', ' + year\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 3000,\n                    appendToast: append\n                })\n            },\n        },\n        created() {\n            this.fetch_tables_info()\n        }\n    }\n</script>\n\n<style scoped>\n    .table-card {\n        width: 40vw;\n        position: relative;\n        margin: auto;\n        margin-top: 30px;\n    }\n    .action-button {\n        margin-right: 10px;\n        margin-left: 10px;\n    }\n</style>"]}]}