{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue","mtime":1589327930316},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci9pbmRleCcKaW1wb3J0IFRhYmxlRWRpdFZpZXcgZnJvbSAiLi4vdmlld3MvVGFibGVFZGl0VmlldyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiQWxsVGFibGVzIiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBUYWJsZUVkaXRWaWV3CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIHN0b3JlOiBzdG9yZSwKICAgICAgICAgICAgYWxsX2F1dGhvcl90YWJsZXM6IFtdLAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZmV0Y2hfdGFibGVzX2luZm86IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IGRhdGEgPSB7J2FjdGlvbic6ICdnZXRfYWxsJywgcGFyYW1zOiB7J2F1dGhvci10b2tlbic6IHN0b3JlLnN0YXRlLnRva2VufX0KICAgICAgICAgICAgYXhpb3Moe3VybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NjA2MC9hcGkvdGFibGVfY3JlYXRvci8nLCBkYXRhOiBkYXRhLCBtZXRob2Q6ICdQT1NUJ30pCiAgICAgICAgICAgIC50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlc3AuZGF0YS5yZXN1bHQgPT09ICdvaycpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbF9hdXRob3JfdGFibGVzID0gW10KICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCB0YWJsZSBvZiByZXNwLmRhdGEucGFyYW1zLmFsbF9hdXRob3JfdGFibGVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhdXRob3JfdGFibGUgPSB7fQogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ2lkJ10gPSB0YWJsZVsnaWQnXQogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ3RhYmxlX25hbWUnXSA9IHRhYmxlWyd0YWJsZV9uYW1lJ10KICAgICAgICAgICAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV9kZXBhcnRtZW50J10gPSB0YWJsZVsndGFibGVfZGVwYXJ0bWVudCddCiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfZGlyZWN0aW9uJ10gPSB0YWJsZVsndGFibGVfZGlyZWN0aW9uJ10KICAgICAgICAgICAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV9ncm91cF9udW1iZXInXSA9IHRhYmxlWyd0YWJsZV9ncm91cF9udW1iZXInXQogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ3RhYmxlX2NyZWF0ZWRfYXQnXSA9IHRoaXMuZ2V0X2NvcnJlY3RfZGF0ZSh0YWJsZVsndGFibGVfY3JlYXRlZF9hdCddKQogICAgICAgICAgICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ3RhYmxlX3VwZGF0ZWRfYXQnXSA9IHRoaXMuZ2V0X2NvcnJlY3RfZGF0ZSh0YWJsZVsndGFibGVfdXBkYXRlZF9hdCddKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFsbF9hdXRob3JfdGFibGVzLnB1c2goYXV0aG9yX3RhYmxlKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0LfQsNCz0YDRg9C30LrQtSDRgdC/0LjRgdC60LAg0YLQsNCx0LvQuNGGJykKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKCiAgICAgICAgfSwKICAgICAgICBlZGl0X3RhYmxlOiBmdW5jdGlvbiAodGFibGVfaWQpIHsKICAgICAgICAgICAgc3RvcmUuc3RhdGUuc2VsZWN0ZWRfdGFibGVfaWQgPSB0YWJsZV9pZAogICAgICAgICAgICByb3V0ZXIucHVzaCgnL2VkaXRfdGFibGUnKQogICAgICAgIH0sCiAgICAgICAgZGVsZXRlX3RhYmxlOiBmdW5jdGlvbiAodGFibGVfaWQpIHsKICAgICAgICAgICAgbGV0IGRhdGEgPSB7J2FjdGlvbic6ICdkZWxldGVfdGFibGUnLCAncGFyYW1zJzogeyd0YWJsZV9pZCc6IHRhYmxlX2lkfX0KICAgICAgICAgICAgYXhpb3Moe3VybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NjA2MC9hcGkvdGFibGVfY3JlYXRvci8nLCBkYXRhOiBkYXRhLCBtZXRob2Q6ICdQT1NUJ30pCiAgICAgICAgICAgIC50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlc3AuZGF0YS5yZXN1bHQgPT09ICdvaycpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmZldGNoX3RhYmxlc19pbmZvKCkKICAgICAgICAgICAgICAgICAgICB0aGlzLm1ha2VfdG9hc3QoJ9Cj0LTQsNC70LXQvdC40LUnLCAn0KLQsNCx0LvQuNGG0LAg0YPQtNCw0LvQtdC90LAnKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhLnBhcmFtcy5tZXNzYWdlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgY3JlYXRlX2RvY3VtZW50OiBmdW5jdGlvbiAodGFibGVfaWQsIHRhYmxlX25hbWUsIGdyb3VwX251bWJlcikgewogICAgICAgICAgICBsZXQgZGF0YSA9IHsnYWN0aW9uJzogJ2NyZWF0ZV9kb2N1bWVudCcsICdwYXJhbXMnOiB7J3RhYmxlX2lkJzogdGFibGVfaWR9fQogICAgICAgICAgICBheGlvcyh7dXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnLCByZXNwb25zZVR5cGU6ICdibG9iJ30pCiAgICAgICAgICAgICAgICAudGhlbihyZXNwID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3ApCiAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlsZVVSTCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKG5ldyBCbG9iKFtyZXNwLmRhdGFdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlsZUxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlTGluay5ocmVmID0gZmlsZVVSTDsKICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWxlX25hbWUgPSB0YWJsZV9uYW1lICsgJ18nICsgZ3JvdXBfbnVtYmVyICsgJy54bHMnCiAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlTGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgZmlsZV9uYW1lKTsKICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZmlsZUxpbmspOwogICAgICAgICAgICAgICAgICAgICAgICAgZmlsZUxpbmsuY2xpY2soKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiAoY29uc29sZS5sb2coZXJyb3IpKSkKICAgICAgICB9LAogICAgICAgIC8vIEFkZGl0aW9uYWwgbWV0aG9kcwogICAgICAgIGdldF9jb3JyZWN0X2RhdGU6IGZ1bmN0aW9uIChkYXRlX3N0cmluZykgewogICAgICAgICAgICAgbGV0IGRhdGVPYmogPSBuZXcgRGF0ZShkYXRlX3N0cmluZykKICAgICAgICAgICAgIGxldCBtb250aCA9IHN0b3JlLnN0YXRlLm1vbnRoX25hbWVzW2RhdGVPYmouZ2V0TW9udGgoKV07CiAgICAgICAgICAgICBsZXQgZGF5ID0gU3RyaW5nKGRhdGVPYmouZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICAgICAgICAgbGV0IHllYXIgPSBkYXRlT2JqLmdldEZ1bGxZZWFyKCk7CiAgICAgICAgICAgICBsZXQgaG91ciA9IGRhdGVPYmouZ2V0SG91cnMoKTsKICAgICAgICAgICAgIGxldCBtaW51dGVzID0gU3RyaW5nKGRhdGVPYmouZ2V0TWludXRlcygpKS5wYWRTdGFydCgyLCAnMCcpCiAgICAgICAgICAgICByZXR1cm4gaG91ciArICc6JyArIG1pbnV0ZXMgKyAnLCAnICsgZGF5ICsgJyAnICsgbW9udGggKyAnLCAnICsgeWVhcgogICAgICAgIH0sCiAgICAgICAgbWFrZV90b2FzdDogZnVuY3Rpb24gKGV2ZW50X3R5cGUsIG1lc3NhZ2UsIGFwcGVuZD1mYWxzZSkgewogICAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KG1lc3NhZ2UsIHsKICAgICAgICAgICAgICAgIHRpdGxlOiBldmVudF90eXBlLAogICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBhcHBlbmQKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5mZXRjaF90YWJsZXNfaW5mbygpCiAgICB9Cn0K"},{"version":3,"sources":["AllTables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllTables.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"all-tables\">\n        <h2>Созданные ведомости</h2>\n        <div style=\"text-align: center\">\n            <b-card v-for=\"table in all_author_tables\" class=\"table-card\" :key=\"table.table_id\">\n                <b-card-title>\n                    <b>{{table.table_name}}, группа {{table.table_group_number}}</b>\n                </b-card-title>\n               <b-card-body style=\"text-align: left\">\n                   <b>Кафедра:</b> {{table.table_department}}<br/>\n                   <b>Направление:</b> {{ store.state.direction_decryption[table.table_direction ]}} <br/>\n                   <b>Создание:</b> {{table.table_created_at}} <br/>\n                   <b>Последнее редактирование:</b> {{table.table_updated_at}} <br/>\n               </b-card-body>\n               <b-card-footer>\n                   <b-btn squared variant=\"outline-dark\" class=\"action-button\" @click=\"edit_table(table.id)\">Редактировать</b-btn>\n                   <b-btn squared variant=\"outline-dark\" class=\"action-button\" @click=\"delete_table(table.id)\">Удалить</b-btn>\n                   <b-btn squared variant=\"outline-dark\" class=\"action-button\" @click=\"create_document(table.id, table.table_name, table.table_group_number)\">Скачать файл (.xls)</b-btn>\n               </b-card-footer>\n            </b-card>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n    import router from '../router/index'\n    import TableEditView from \"../views/TableEditView\";\n\n    export default {\n        name: \"AllTables\",\n        components: {\n            TableEditView\n        },\n        data() {\n            return{\n                store: store,\n                all_author_tables: [],\n            }\n        },\n        methods: {\n            fetch_tables_info: function () {\n                let data = {'action': 'get_all', params: {'author-token': store.state.token}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.all_author_tables = []\n                        for (let table of resp.data.params.all_author_tables) {\n                            let author_table = {}\n                            author_table['id'] = table['id']\n                            author_table['table_name'] = table['table_name']\n                            author_table['table_department'] = table['table_department']\n                            author_table['table_direction'] = table['table_direction']\n                            author_table['table_group_number'] = table['table_group_number']\n                            author_table['table_created_at'] = this.get_correct_date(table['table_created_at'])\n                            author_table['table_updated_at'] = this.get_correct_date(table['table_updated_at'])\n                            this.all_author_tables.push(author_table)\n                        }\n                    } else {\n                        console.log('Ошибка при загрузке списка таблиц')\n                    }\n                })\n\n            },\n            edit_table: function (table_id) {\n                store.state.selected_table_id = table_id\n                router.push('/edit_table')\n            },\n            delete_table: function (table_id) {\n                let data = {'action': 'delete_table', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.fetch_tables_info()\n                        this.make_toast('Удаление', 'Таблица удалена')\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            create_document: function (table_id, table_name, group_number) {\n                let data = {'action': 'create_document', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST', responseType: 'blob'})\n                    .then(resp => {\n                             console.log(resp)\n                             var fileURL = window.URL.createObjectURL(new Blob([resp.data]));\n                             var fileLink = document.createElement('a');\n                             fileLink.href = fileURL;\n                             let file_name = table_name + '_' + group_number + '.xls'\n                             fileLink.setAttribute('download', file_name);\n                             document.body.appendChild(fileLink);\n                             fileLink.click();\n                    })\n                .catch(error => (console.log(error)))\n            },\n            // Additional methods\n            get_correct_date: function (date_string) {\n                 let dateObj = new Date(date_string)\n                 let month = store.state.month_names[dateObj.getMonth()];\n                 let day = String(dateObj.getDate()).padStart(2, '0');\n                 let year = dateObj.getFullYear();\n                 let hour = dateObj.getHours();\n                 let minutes = String(dateObj.getMinutes()).padStart(2, '0')\n                 return hour + ':' + minutes + ', ' + day + ' ' + month + ', ' + year\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 3000,\n                    appendToast: append\n                })\n            },\n        },\n        created() {\n            this.fetch_tables_info()\n        }\n    }\n</script>\n\n<style scoped>\n    .table-card {\n        width: 40vw;\n        position: relative;\n        margin: auto;\n        margin-top: 30px;\n    }\n    .action-button {\n        margin-right: 10px;\n        margin-left: 10px;\n    }\n</style>"]}]}