{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue","mtime":1588786844017},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci9pbmRleCcKaW1wb3J0IFRhYmxlRWRpdFZpZXcgZnJvbSAiLi4vdmlld3MvVGFibGVFZGl0VmlldyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiQWxsVGFibGVzIiwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBUYWJsZUVkaXRWaWV3CiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIGFsbF9hdXRob3JfdGFibGVzOiAnJywKICAgICAgICB9CgogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBmZXRjaF90YWJsZXNfaW5mbzogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsZXQgZGF0YSA9IHsnYWN0aW9uJzogJ2dldF9hbGwnLCBwYXJhbXM6IHsnYXV0aG9yLXRva2VuJzogc3RvcmUuc3RhdGUudG9rZW59fQogICAgICAgICAgICBheGlvcyh7dXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsIGRhdGE6IGRhdGEsIG1ldGhvZDogJ1BPU1QnfSkKICAgICAgICAgICAgLnRoZW4ocmVzcCA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYWxsX2F1dGhvcl90YWJsZXMgPSByZXNwLmRhdGEucGFyYW1zLmFsbF9hdXRob3JfdGFibGVzCiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5hbGxfYXV0aG9yX3RhYmxlcykKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0LfQsNCz0YDRg9C30LrQtSDRgdC/0LjRgdC60LAg0YLQsNCx0LvQuNGGJykKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKCiAgICAgICAgfSwKICAgICAgICBlZGl0X3RhYmxlOiBmdW5jdGlvbiAodGFibGVfaWQpIHsKICAgICAgICAgICAgc3RvcmUuc3RhdGUuc2VsZWN0ZWRfdGFibGVfaWQgPSB0YWJsZV9pZAogICAgICAgICAgICByb3V0ZXIucHVzaCgnL2VkaXRfdGFibGUnKQogICAgICAgIH0sCiAgICAgICAgZGVsZXRlX3RhYmxlOiBmdW5jdGlvbiAodGFibGVfaWQpIHsKICAgICAgICAgICAgbGV0IGRhdGEgPSB7J2FjdGlvbic6ICdkZWxldGVfdGFibGUnLCAncGFyYW1zJzogeyd0YWJsZV9pZCc6IHRhYmxlX2lkfX0KICAgICAgICAgICAgYXhpb3Moe3VybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NjA2MC9hcGkvdGFibGVfY3JlYXRvci8nLCBkYXRhOiBkYXRhLCBtZXRob2Q6ICdQT1NUJ30pCiAgICAgICAgICAgIC50aGVuKHJlc3AgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlc3AuZGF0YS5yZXN1bHQgPT09ICdvaycpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmZldGNoX3RhYmxlc19pbmZvKCkKICAgICAgICAgICAgICAgICAgICB0aGlzLm1ha2VfdG9hc3QoJ9Cj0LTQsNC70LXQvdC40LUnLCAn0KLQsNCx0LvQuNGG0LAg0YPQtNCw0LvQtdC90LAnKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhLnBhcmFtcy5tZXNzYWdlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgbWFrZV90b2FzdDogZnVuY3Rpb24gKGV2ZW50X3R5cGUsIG1lc3NhZ2UsIGFwcGVuZD1mYWxzZSkgewogICAgICAgICAgICB0aGlzLiRidlRvYXN0LnRvYXN0KG1lc3NhZ2UsIHsKICAgICAgICAgICAgICAgIHRpdGxlOiBldmVudF90eXBlLAogICAgICAgICAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICAgICAgICAgIGFwcGVuZFRvYXN0OiBhcHBlbmQKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5mZXRjaF90YWJsZXNfaW5mbygpCiAgICB9Cn0K"},{"version":3,"sources":["AllTables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AllTables.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"all-tables\">\n        <h2>Здесь будут все таблицы, созданные текущим пользователем</h2>\n        <div style=\"text-align: center\">\n            <b-card v-for=\"table in all_author_tables\" class=\"table-card\">\n                <b-card-title>\n                    {{table.table_name}}\n                </b-card-title>\n               <b-card-body style=\"text-align: left\">\n                   Группа: {{table.table_group_number}} <br/>\n                   Направление: <b>Нет Поля</b> <br/>\n                   Дата создания: <b>Нет Поля</b> <br/>\n                   Дата последнего редактирования: <b>Нет Поля</b> <br/>\n               </b-card-body>\n               <b-card-footer>\n                   <b-btn squared variant=\"outline-secondary\" small class=\"action-button\" @click=\"edit_table(table.id)\">Редактировать</b-btn>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"delete_table(table.id)\">Удалить</b-btn>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\">Сохранить документ</b-btn>\n               </b-card-footer>\n            </b-card>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n    import router from '../router/index'\n    import TableEditView from \"../views/TableEditView\";\n\n    export default {\n        name: \"AllTables\",\n        components: {\n            TableEditView\n        },\n        data() {\n            return{\n                all_author_tables: '',\n            }\n\n        },\n        methods: {\n            fetch_tables_info: function () {\n                let data = {'action': 'get_all', params: {'author-token': store.state.token}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.all_author_tables = resp.data.params.all_author_tables\n                        // console.log(this.all_author_tables)\n                    } else {\n                        console.log('Ошибка при загрузке списка таблиц')\n                    }\n                })\n\n            },\n            edit_table: function (table_id) {\n                store.state.selected_table_id = table_id\n                router.push('/edit_table')\n            },\n            delete_table: function (table_id) {\n                let data = {'action': 'delete_table', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.fetch_tables_info()\n                        this.make_toast('Удаление', 'Таблица удалена')\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 3000,\n                    appendToast: append\n                })\n            },\n        },\n        created() {\n            this.fetch_tables_info()\n        }\n    }\n</script>\n\n<style scoped>\n    .table-card {\n        width: 40vw;\n        position: relative;\n        margin: auto;\n        margin-top: 30px;\n    }\n    .action-button {\n        margin-right: 10px;\n        margin-left: 10px;\n    }\n</style>"]}]}