{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/LoginForm.vue?vue&type=style&index=0&id=8dac4566&scoped=true&lang=css&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/LoginForm.vue","mtime":1589385484271},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAubG9naW4tY2FyZCB7CiAgIHdpZHRoOiA0MDBweDsKICAgbWF4LWhlaWdodDogMzAwcHg7CiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgdG9wOiBjYWxjKDUwJSAtIDE1MHB4KTsKICAgbGVmdDogY2FsYyg1MCUgLSAyMDBweCk7CiB9Ci5sb2dpbi1jYXJkIC5lcnJvci1zdWJ0aXRsZSB7CiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgbGVmdDogMDsKICAgcmlnaHQ6IDA7CiAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgIHdpZHRoOiAzMDBweDsgLyogTmVlZCBhIHNwZWNpZmljIHZhbHVlIHRvIHdvcmsgKi8KfQo="},{"version":3,"sources":["LoginForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-card class=\"login-card\">\n      <b-card-title>\n        <header class=\"\">\n          <p>Вход</p>\n        </header>\n        <b-card-sub-title v-if=\"error\" class=\"error-subtitle\">Ошибка. Проверьте введенные данные.</b-card-sub-title>\n      </b-card-title>\n      <b-card-body>\n        <b-form-input type=\"email\" name=\"email\" v-model=\"email\" :state=\"email_state\" @change=\"email_state = null\" placeholder=\"Email пользователя\" required></b-form-input>\n        <b-form-input  type=\"password\" name=\"password\" v-model=\"password\" :state=\"password_state\" @change=\"password_state = null\" placeholder=\"Пароль\" required class=\"mt-3\"/>\n      </b-card-body>\n      <b-card-footer>\n        <b-button squared class=\"button is-primary\" @click='login'>Войти</b-button>\n        <br/>\n        <b-link class=\"button is-primary\" @click=\"$router.push({name: 'registrationForm'})\">Регистрация</b-link>\n      </b-card-footer>\n    </b-card>\n  </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import router from \"../router/index\";\n    import store from \"../store\";\n\n    export default {\n      data: function () {\n        return {\n          email: '',\n          email_state: null,\n          password: '',\n          password_state: null,\n          token: localStorage.getItem('user-token') || null,\n          error: false\n        }\n      },\n      methods: {\n        login: async function () {\n          this.error = false\n          this.email_state = null\n          this.password_state = null\n          if (this.email === '') this.email_state = false\n          else this.email_state = null\n          if (this.password === '') this.password_state = false\n          else this.password_state = null\n          if (this.email_state === false || this.password_state === false) return\n\n          let email = this.email\n          let password = this.password\n          axios({url: 'http://localhost:6060/auth/', data: {email, password}, method: 'POST'})\n            .then(resp => {\n              if (resp.data.result === 'ok') {\n                let user_info = {'token': resp.data.params.token, 'user': resp.data.params.user }\n                localStorage.setItem('user-token', user_info['token'])\n                axios.defaults.headers.common['Authorization'] = 'Token ' + resp.data.params.token\n                store.commit('auth_success', user_info)\n                router.push('/')\n              }\n              else {\n               store.commit('auth_error', resp.data.result)\n               localStorage.removeItem('user-token')\n                this.error = true\n              }\n            })\n        },\n      },\n      created() {\n        if (localStorage.getItem('user-token') !== null) {\n          router.push({name: 'home'})\n        }\n      }\n    }\n</script>\n\n\n\n<style scoped>\n  .login-card {\n    width: 400px;\n    max-height: 300px;\n    position: absolute;\n    top: calc(50% - 150px);\n    left: calc(50% - 200px);\n  }\n .login-card .error-subtitle {\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 300px; /* Need a specific value to work */\n }\n</style>"]}]}