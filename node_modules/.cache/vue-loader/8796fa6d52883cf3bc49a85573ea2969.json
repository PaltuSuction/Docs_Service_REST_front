{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue?vue&type=style&index=0&id=15ff9a55&scoped=true&lang=css&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue","mtime":1588776466936},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGFibGUtd3JhcHBlciB7CiAgICBtYXJnaW4tdG9wOiAzMHB4Owp9Ci50YWJsZS1ncmFkZS1jZWxsIHsKICAgIG1pbi13aWR0aDogNTBweDsKfQoudGFibGUtaGVhZC1jZWxsIHsKICAgIHBhZGRpbmc6IDVweDsKfQoudGFibGUtZmlvLWNlbGwgewogICAgcGFkZGluZy1sZWZ0OiA1cHg7CiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7Cn0KdGFibGUgewogICAgb3ZlcmZsb3c6IGhpZGRlbjsKfQp0cjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTRmZmZhOwp9Cgp0ZDpob3Zlcjo6YWZ0ZXIsCnRoOmhvdmVyOjphZnRlciB7CiAgY29udGVudDogIiI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDA7CiAgdG9wOiAtNTAwMHB4OwogIGhlaWdodDogMTAwcHg7CiAgd2lkdGg6IDEwMCU7CiAgei1pbmRleDogLTE7Cn0K"},{"version":3,"sources":["TableGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableGenerator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"table-generator\">\n        <p>GENERATOR PLACEHOLDER</p>\n        <b-card>\n            <b-card-body>\n                <b-form-group>\n                    <b-form-select v-model=\"selected_column_type\" style=\"width: 14vw\">\n                         <b-form-select-option v-for=\"type in store.state.col_types\" v-bind:value=\"type\">{{type}}</b-form-select-option>\n                    </b-form-select>\n                    <b-button squared variant=\"outline-dark\" @click=\"add_column\" class=\"ml-3\">Добавить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"delete_column\" class=\"ml-3\">Удалить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"\" class=\"ml-3\">Сохранить таблицу</b-button>\n                </b-form-group>\n            </b-card-body>\n        </b-card>\n        <b-card>\n            <b-card-body>\n                <div class=\"table-wrapper\">\n                    <!--\n                    <table border=\"1\">\n                        <thead>\n                        <tr>\n                            <th rowspan=\"2\">\n                                ФИО\n                            </th>\n                            <th v-for=\"grade_type in table.grade_types\" :colspan=\"grade_type.num\" :key=\"grade_type.name\">\n                                {{grade_type.name}}\n                            </th>\n                        </tr>\n                        <tr>\n                            <template v-for=\"grade_type in table.grade_types\">\n                                <td v-for=\"n in grade_type.num\">\n                                    # {{n}}\n                                </td>\n                            </template>\n                        </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"student in table.group_info\" rowspan=\"2\">\n                                <td>\n                                     {{student.fio}}\n                                </td>\n                                <template v-for=\"grade_type in student.grades\">\n                                    <td v-for=\"grade in grade_type\">\n                                        <div v-show=\"student.edit !== grade\">\n                                            <label @dblclick=\"student.edit = grade\">{{grade}}</label>\n                                        </div>\n                                        <input name=\"grade\"\n                                               v-show = \"student.edit === grade\"\n                                               v-model=\"placeholder_change\"\n                                               v-on:blur=\"student.edit = ''\"\n                                               @keyup.enter=\"student.edit = ''\"/>\n                                    </td>\n                                </template>\n                            </tr>\n                        </tbody>\n                    </table>\n                    -->\n                    <!--\n                    <table border=\"1\">\n                        <thead>\n                        <tr>\n                            <td v-for=\"(value, key) in table_2[0]\">\n                                {{key}}\n                            </td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"student_data in table_2\">\n                                <td v-for=\"(value, key) in student_data\">\n                                    <div v-show=\"student_data.edit !== key\">\n                                        <label @dblclick=\"student_data.edit = key\"> {{value}}</label>\n                                    </div>\n                                    <input class=\"grade-input\" name=\"key\"\n                                    v-show=\"student_data.edit === key\"\n                                    v-model = \"student_data[key]\"\n                                    v-on:blur=\"student_data.edit = ''\"\n                                    @keyup.enter = \"student_data.edit = ''\"/>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    -->\n                    <table border=\"2\" style=\"margin: auto\" ref=\"grades_table\">\n                        <thead>\n                            <tr>\n                                <th rowspan=\"2\">\n                                    ФИО\n                                </th>\n                                <th v-for=\"(num, name) in grades_types\" :key=\"name\" :colspan=\"num\" class=\"table-head-cell\">\n                                    {{name}}\n                                </th>\n                            </tr>\n                            <tr>\n                                <template v-for=\"(num, name) in grades_types\">\n                                    <th v-for=\"n in num\" class=\"table-grade-cell\">\n                                        № {{n}}\n                                    </th>\n                                </template>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr v-for=\"student in students\">\n                               <td class=\"table-fio-cell\">\n                                    {{student.fio}}\n                               </td>\n                                <template v-for=\"grade_type in student.grades\">\n                                    <td v-for=\"grade in grade_type\">\n                                        {{grade.grade_value}}\n                                    </td>\n                                </template>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </b-card-body>\n\n        </b-card>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n\n    export default {\n        name: \"TableGenerator\",\n        components: {},\n        props: ['table_data'],\n        data() {\n            return {\n                store: store,\n                table_id: '',\n                students: '',\n                grades_types: '',\n                selected_column_type: '',\n                // Тестовые переменные\n                /* table: {\n                    grade_types: [{'name': 'Лабораторная работа','num': 4},\n                                  {'name': 'Тест','num': 3},\n                                  {'name': 'Итог','num': 1}],\n                    group_info: {\n                        'student_1' : {\n                            fio: 'Ф И О 1',\n                            grades: {\n                                'lab': [4, 5, 5, 5],\n                                'test': [3, 4, 4],\n                                'fin': [0]\n                            },\n                            edit: undefined\n                        },\n                        'student_2' : {\n                            fio: 'Ф И О 2',\n                            grades: {\n                                'lab': [4, 3, 4, 5],\n                                'test': [4, 4, 5],\n                                'fin': [0]\n                            },\n                            edit: undefined\n                        }\n                    }\n                },\n                table_2: [\n                    {'fio': 'ФИО1', 'lab1': '3', 'lab2': '4', 'lab3': '3', 'test1': '5', 'test2': '5', 'edit': undefined},\n                    {'fio': 'ФИО2', 'lab1': '3', 'lab2': '3', 'lab3': '5', 'test1': '3', 'test2': '5', 'edit': undefined},\n                    {'fio': 'ФИО3', 'lab1': '5', 'lab2': '4', 'lab3': '3', 'test1': '5', 'test2': '4', 'edit': undefined},\n                ] */\n            }\n        },\n        methods: {\n            add_column: function () {\n                let _t = this\n                for (let [key, value] of Object.entries(_t.grades_types)) {\n                    if (key === this.selected_column_type) {\n                        _t.grades_types[key] +=1\n                    }\n                    // console.log(key, value)\n                }\n                if (_t.grades_types[_t.selected_column_type] === undefined) {\n                    _t.grades_types[_t.selected_column_type] = 1\n                }\n                let data = {action: 'add_column', params: {table_id: _t.table_id, column_type: _t.selected_column_type}}\n                axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        let new_grades = resp.data.params.new_grades\n                        for (let student of _t.students) {\n                            if (!(_t.selected_column_type in student.grades)) {\n                                student.grades[_t.selected_column_type] = []\n                            }\n                            student.grades[_t.selected_column_type].push(new_grades[student.id])\n                        }\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n\n                /*for (let student of this.students) {\n                    student.grades[this.selected_column_type].push({grade_type: this.selected_column_type, grade_value: null})\n                    student.grades[this.selected_column_type].sort(this.compare_grades)\n                } */\n            },\n            delete_column: function () {\n                var _t = this\n                if (_t.selected_column_type in _t.grades_types) {\n                     for (let [key, value] of Object.entries(_t.grades_types)) {\n                        if (key === _t.selected_column_type) {\n                            _t.grades_types[key] -=1\n                            if (_t.grades_types[key] <= 0) {\n                                delete _t.grades_types[key]\n                            }\n                        }\n                    }\n                     let deleted_grades_ids = []\n                     for (let student of _t.students) {\n                         let last_grade_in_type = student.grades[_t.selected_column_type][student.grades[_t.selected_column_type].length - 1]\n                         let last_grade_in_type_id = last_grade_in_type.id\n                         deleted_grades_ids.push(last_grade_in_type_id)\n                     }\n                     let data = {action: 'delete_column', params: {table_id: _t.table_id, grades_ids: deleted_grades_ids}}\n                     axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                    .then(resp => {\n                        if (resp.data.result === 'ok') {\n                            for (let student of _t.students) {\n                                student.grades[_t.selected_column_type].pop()\n                            }\n                        }\n                        else {\n                            console.log(resp.data.params.message)\n                        }\n                    })\n                    /* for (let student of this.students) {\n                        student.grades.pop({grade_value: null})\n                        student.grades.sort(this.compare_grades)\n                    } */\n                }\n            },\n            //additional functions\n            compare_grades: function (a, b) {\n                if (a.grade_type < b.grade_type)\n                    return -1\n                if (a.grade_type > b.grade_type)\n                    return 1\n                return 0\n            }\n        },\n        created() {\n            this.table_id = this.table_data.id\n            this.students = this.table_data.students_and_grades\n            this.grades_types = this.table_data.grades_types\n        }\n    }\n\n\n</script>\n\n<style scoped>\n    .table-wrapper {\n        margin-top: 30px;\n    }\n    .table-grade-cell {\n        min-width: 50px;\n    }\n    .table-head-cell {\n        padding: 5px;\n    }\n    .table-fio-cell {\n        padding-left: 5px;\n        padding-right: 5px;\n    }\n    table {\n        overflow: hidden;\n    }\n    tr:hover {\n        background-color: #e4fffa;\n    }\n\n    td:hover::after,\n    th:hover::after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      top: -5000px;\n      height: 100px;\n      width: 100%;\n      z-index: -1;\n    }\n</style>"]}]}