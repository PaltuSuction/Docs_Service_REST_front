{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue","mtime":1589048903656},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5wYWQtc3RhcnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvaG9tZS9wYWx0dXMvUHljaGFybVByb2plY3RzL0RvY3NfU2VydmljZV9SRVNUX3YyL3RhYmxlZ2VuZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgc3RvcmUgZnJvbSAnLi4vc3RvcmUnOwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci9pbmRleCc7CmltcG9ydCBUYWJsZUVkaXRWaWV3IGZyb20gIi4uL3ZpZXdzL1RhYmxlRWRpdFZpZXciOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFsbFRhYmxlcyIsCiAgY29tcG9uZW50czogewogICAgVGFibGVFZGl0VmlldzogVGFibGVFZGl0VmlldwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbF9hdXRob3JfdGFibGVzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoX3RhYmxlc19pbmZvOiBmdW5jdGlvbiBmZXRjaF90YWJsZXNfaW5mbygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gewogICAgICAgICdhY3Rpb24nOiAnZ2V0X2FsbCcsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAnYXV0aG9yLXRva2VuJzogc3RvcmUuc3RhdGUudG9rZW4KICAgICAgICB9CiAgICAgIH07CiAgICAgIGF4aW9zKHsKICAgICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjYwNjAvYXBpL3RhYmxlX2NyZWF0b3IvJywKICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgIG1ldGhvZDogJ1BPU1QnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgX3RoaXMuYWxsX2F1dGhvcl90YWJsZXMgPSBbXTsKCiAgICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIocmVzcC5kYXRhLnBhcmFtcy5hbGxfYXV0aG9yX3RhYmxlcyksCiAgICAgICAgICAgICAgX3N0ZXA7CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICB2YXIgdGFibGUgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgICB2YXIgYXV0aG9yX3RhYmxlID0ge307CiAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWydpZCddID0gdGFibGVbJ2lkJ107CiAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV9uYW1lJ10gPSB0YWJsZVsndGFibGVfbmFtZSddOwogICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfZ3JvdXBfbnVtYmVyJ10gPSB0YWJsZVsndGFibGVfZ3JvdXBfbnVtYmVyJ107CiAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV9jcmVhdGVkX2F0J10gPSBfdGhpcy5nZXRfY29ycmVjdF9kYXRlKHRhYmxlWyd0YWJsZV9jcmVhdGVkX2F0J10pOwogICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfdXBkYXRlZF9hdCddID0gX3RoaXMuZ2V0X2NvcnJlY3RfZGF0ZSh0YWJsZVsndGFibGVfdXBkYXRlZF9hdCddKTsKCiAgICAgICAgICAgICAgX3RoaXMuYWxsX2F1dGhvcl90YWJsZXMucHVzaChhdXRob3JfdGFibGUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCfQntGI0LjQsdC60LAg0L/RgNC4INC30LDQs9GA0YPQt9C60LUg0YHQv9C40YHQutCwINGC0LDQsdC70LjRhicpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZWRpdF90YWJsZTogZnVuY3Rpb24gZWRpdF90YWJsZSh0YWJsZV9pZCkgewogICAgICBzdG9yZS5zdGF0ZS5zZWxlY3RlZF90YWJsZV9pZCA9IHRhYmxlX2lkOwogICAgICByb3V0ZXIucHVzaCgnL2VkaXRfdGFibGUnKTsKICAgIH0sCiAgICBkZWxldGVfdGFibGU6IGZ1bmN0aW9uIGRlbGV0ZV90YWJsZSh0YWJsZV9pZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gewogICAgICAgICdhY3Rpb24nOiAnZGVsZXRlX3RhYmxlJywKICAgICAgICAncGFyYW1zJzogewogICAgICAgICAgJ3RhYmxlX2lkJzogdGFibGVfaWQKICAgICAgICB9CiAgICAgIH07CiAgICAgIGF4aW9zKHsKICAgICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjYwNjAvYXBpL3RhYmxlX2NyZWF0b3IvJywKICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgIG1ldGhvZDogJ1BPU1QnCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICBpZiAocmVzcC5kYXRhLnJlc3VsdCA9PT0gJ29rJykgewogICAgICAgICAgX3RoaXMyLmZldGNoX3RhYmxlc19pbmZvKCk7CgogICAgICAgICAgX3RoaXMyLm1ha2VfdG9hc3QoJ9Cj0LTQsNC70LXQvdC40LUnLCAn0KLQsNCx0LvQuNGG0LAg0YPQtNCw0LvQtdC90LAnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhLnBhcmFtcy5tZXNzYWdlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGNyZWF0ZV9kb2N1bWVudDogZnVuY3Rpb24gY3JlYXRlX2RvY3VtZW50KHRhYmxlX2lkKSB7CiAgICAgIHZhciBkYXRhID0gewogICAgICAgICdhY3Rpb24nOiAnY3JlYXRlX2RvY3VtZW50JywKICAgICAgICAncGFyYW1zJzogewogICAgICAgICAgJ3RhYmxlX2lkJzogdGFibGVfaWQKICAgICAgICB9CiAgICAgIH07CiAgICAgIGF4aW9zKHsKICAgICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjYwNjAvYXBpL3RhYmxlX2NyZWF0b3IvJywKICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHJlc3BvbnNlVHlwZTogJ2Jsb2InCiAgICAgIH0pCiAgICAgIC8qIC50aGVuKHJlc3AgPT4gewogICAgICAgICAgaWYgKHJlc3AuZGF0YS5yZXN1bHQgPT09ICdvaycpIHsKICAgICAgICAgICAgICB0aGlzLm1ha2VfdG9hc3QoJ9Ch0L7Qt9C00LDQvdC40LUg0LTQvtC60YPQvNC10L3RgtCwJywgJ9CU0L7QutGD0LzQtdC90YIg0YHQvtC30LTQsNC9INGD0YHQv9C10YjQvdC+JykKICAgICAgICAgIH0KICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgIHRoaXMubWFrZV90b2FzdCgn0KHQvtC30LTQsNC90LjQtSDQtNC+0LrRg9C80LXQvdGC0LAnLCAn0J7RiNC40LHQutCwINC/0YDQuCDRgdC+0LfQtNCw0L3QuNC4INC00L7QutGD0LzQtdC90YLQsCcpCiAgICAgICAgICB9CiAgICAgIH0pICovCiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcCk7CiAgICAgICAgdmFyIGZpbGVVUkwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbcmVzcC5kYXRhXSkpOwogICAgICAgIHZhciBmaWxlTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICBmaWxlTGluay5ocmVmID0gZmlsZVVSTDsKICAgICAgICBmaWxlTGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ2ZpbGUueGxzJyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChmaWxlTGluayk7CiAgICAgICAgZmlsZUxpbmsuY2xpY2soKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gQWRkaXRpb25hbCBtZXRob2RzCiAgICBnZXRfY29ycmVjdF9kYXRlOiBmdW5jdGlvbiBnZXRfY29ycmVjdF9kYXRlKGRhdGVfc3RyaW5nKSB7CiAgICAgIHZhciBkYXRlT2JqID0gbmV3IERhdGUoZGF0ZV9zdHJpbmcpOwogICAgICB2YXIgbW9udGggPSBzdG9yZS5zdGF0ZS5tb250aF9uYW1lc1tkYXRlT2JqLmdldE1vbnRoKCldOwogICAgICB2YXIgZGF5ID0gU3RyaW5nKGRhdGVPYmouZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICB2YXIgeWVhciA9IGRhdGVPYmouZ2V0RnVsbFllYXIoKTsKICAgICAgdmFyIGhvdXIgPSBkYXRlT2JqLmdldEhvdXJzKCk7CiAgICAgIHZhciBtaW51dGVzID0gU3RyaW5nKGRhdGVPYmouZ2V0TWludXRlcygpKS5wYWRTdGFydCgyLCAnMCcpOwogICAgICByZXR1cm4gaG91ciArICc6JyArIG1pbnV0ZXMgKyAnLCAnICsgZGF5ICsgJyAnICsgbW9udGggKyAnLCAnICsgeWVhcjsKICAgIH0sCiAgICBtYWtlX3RvYXN0OiBmdW5jdGlvbiBtYWtlX3RvYXN0KGV2ZW50X3R5cGUsIG1lc3NhZ2UpIHsKICAgICAgdmFyIGFwcGVuZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7CiAgICAgIHRoaXMuJGJ2VG9hc3QudG9hc3QobWVzc2FnZSwgewogICAgICAgIHRpdGxlOiBldmVudF90eXBlLAogICAgICAgIGF1dG9IaWRlRGVsYXk6IDMwMDAsCiAgICAgICAgYXBwZW5kVG9hc3Q6IGFwcGVuZAogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoX3RhYmxlc19pbmZvKCk7CiAgfQp9Ow=="},{"version":3,"sources":["AllTables.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"all-tables\">\n        <h2>Здесь будут все таблицы, созданные текущим пользователем</h2>\n        <div style=\"text-align: center\">\n            <b-card v-for=\"table in all_author_tables\" class=\"table-card\" :key=\"table.table_id\">\n                <b-card-title>\n                    <b>{{table.table_name}}, группа {{table.table_group_number}}</b>\n                </b-card-title>\n               <b-card-body style=\"text-align: left\">\n                   Направление: <b>Нет Поля</b> <br/>\n                   Дата создания: {{table.table_created_at}} <br/>\n                   Дата последнего редактирования: {{table.table_updated_at}} <br/>\n               </b-card-body>\n               <b-card-footer>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"edit_table(table.id)\">Редактировать</b-btn>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"delete_table(table.id)\">Удалить</b-btn>\n                   <b-btn squared variant=\"outline-secondary\" class=\"action-button\" @click=\"create_document(table.id)\">Скачать файл (.xls)</b-btn>\n               </b-card-footer>\n            </b-card>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n    import router from '../router/index'\n    import TableEditView from \"../views/TableEditView\";\n\n    export default {\n        name: \"AllTables\",\n        components: {\n            TableEditView\n        },\n        data() {\n            return{\n                all_author_tables: [],\n            }\n\n        },\n        methods: {\n            fetch_tables_info: function () {\n                let data = {'action': 'get_all', params: {'author-token': store.state.token}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.all_author_tables = []\n                        for (let table of resp.data.params.all_author_tables) {\n                            let author_table = {}\n                            author_table['id'] = table['id']\n                            author_table['table_name'] = table['table_name']\n                            author_table['table_group_number'] = table['table_group_number']\n                            author_table['table_created_at'] = this.get_correct_date(table['table_created_at'])\n                            author_table['table_updated_at'] = this.get_correct_date(table['table_updated_at'])\n                            this.all_author_tables.push(author_table)\n                        }\n                    } else {\n                        console.log('Ошибка при загрузке списка таблиц')\n                    }\n                })\n\n            },\n            edit_table: function (table_id) {\n                store.state.selected_table_id = table_id\n                router.push('/edit_table')\n            },\n            delete_table: function (table_id) {\n                let data = {'action': 'delete_table', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.fetch_tables_info()\n                        this.make_toast('Удаление', 'Таблица удалена')\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            create_document: function (table_id) {\n                let data = {'action': 'create_document', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST', responseType: 'blob'})\n                /* .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.make_toast('Создание документа', 'Документ создан успешно')\n                    }\n                    else {\n                        this.make_toast('Создание документа', 'Ошибка при создании документа')\n                    }\n                }) */\n                    .then(resp => {\n                        console.log(resp)\n                             var fileURL = window.URL.createObjectURL(new Blob([resp.data]));\n                             var fileLink = document.createElement('a');\n                             fileLink.href = fileURL;\n                             fileLink.setAttribute('download', 'file.xls');\n                             document.body.appendChild(fileLink);\n                             fileLink.click();\n                    })\n                .catch(error => (console.log(error)))\n            },\n            // Additional methods\n            get_correct_date: function (date_string) {\n                 let dateObj = new Date(date_string)\n                 let month = store.state.month_names[dateObj.getMonth()];\n                 let day = String(dateObj.getDate()).padStart(2, '0');\n                 let year = dateObj.getFullYear();\n                 let hour = dateObj.getHours();\n                 let minutes = String(dateObj.getMinutes()).padStart(2, '0')\n                 return hour + ':' + minutes + ', ' + day + ' ' + month + ', ' + year\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 3000,\n                    appendToast: append\n                })\n            },\n        },\n        created() {\n            this.fetch_tables_info()\n        }\n    }\n</script>\n\n<style scoped>\n    .table-card {\n        width: 40vw;\n        position: relative;\n        margin: auto;\n        margin-top: 30px;\n    }\n    .action-button {\n        margin-right: 10px;\n        margin-left: 10px;\n    }\n</style>"],"sourceRoot":"src/components"}]}