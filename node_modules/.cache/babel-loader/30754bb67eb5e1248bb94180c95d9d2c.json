{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/AllTables.vue","mtime":1589327930316},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5wYWQtc3RhcnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvaG9tZS9wYWx0dXMvUHljaGFybVByb2plY3RzL0RvY3NfU2VydmljZV9SRVNUX3YyL3RhYmxlZ2VuZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgc3RvcmUgZnJvbSAnLi4vc3RvcmUnOwppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlci9pbmRleCc7CmltcG9ydCBUYWJsZUVkaXRWaWV3IGZyb20gIi4uL3ZpZXdzL1RhYmxlRWRpdFZpZXciOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFsbFRhYmxlcyIsCiAgY29tcG9uZW50czogewogICAgVGFibGVFZGl0VmlldzogVGFibGVFZGl0VmlldwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0b3JlOiBzdG9yZSwKICAgICAgYWxsX2F1dGhvcl90YWJsZXM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hfdGFibGVzX2luZm86IGZ1bmN0aW9uIGZldGNoX3RhYmxlc19pbmZvKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgJ2FjdGlvbic6ICdnZXRfYWxsJywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICdhdXRob3ItdG9rZW4nOiBzdG9yZS5zdGF0ZS50b2tlbgogICAgICAgIH0KICAgICAgfTsKICAgICAgYXhpb3MoewogICAgICAgIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NjA2MC9hcGkvdGFibGVfY3JlYXRvci8nLAogICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgbWV0aG9kOiAnUE9TVCcKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgIGlmIChyZXNwLmRhdGEucmVzdWx0ID09PSAnb2snKSB7CiAgICAgICAgICBfdGhpcy5hbGxfYXV0aG9yX3RhYmxlcyA9IFtdOwoKICAgICAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihyZXNwLmRhdGEucGFyYW1zLmFsbF9hdXRob3JfdGFibGVzKSwKICAgICAgICAgICAgICBfc3RlcDsKCiAgICAgICAgICB0cnkgewogICAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgICAgIHZhciB0YWJsZSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgICAgIHZhciBhdXRob3JfdGFibGUgPSB7fTsKICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ2lkJ10gPSB0YWJsZVsnaWQnXTsKICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ3RhYmxlX25hbWUnXSA9IHRhYmxlWyd0YWJsZV9uYW1lJ107CiAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV9kZXBhcnRtZW50J10gPSB0YWJsZVsndGFibGVfZGVwYXJ0bWVudCddOwogICAgICAgICAgICAgIGF1dGhvcl90YWJsZVsndGFibGVfZGlyZWN0aW9uJ10gPSB0YWJsZVsndGFibGVfZGlyZWN0aW9uJ107CiAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV9ncm91cF9udW1iZXInXSA9IHRhYmxlWyd0YWJsZV9ncm91cF9udW1iZXInXTsKICAgICAgICAgICAgICBhdXRob3JfdGFibGVbJ3RhYmxlX2NyZWF0ZWRfYXQnXSA9IF90aGlzLmdldF9jb3JyZWN0X2RhdGUodGFibGVbJ3RhYmxlX2NyZWF0ZWRfYXQnXSk7CiAgICAgICAgICAgICAgYXV0aG9yX3RhYmxlWyd0YWJsZV91cGRhdGVkX2F0J10gPSBfdGhpcy5nZXRfY29ycmVjdF9kYXRlKHRhYmxlWyd0YWJsZV91cGRhdGVkX2F0J10pOwoKICAgICAgICAgICAgICBfdGhpcy5hbGxfYXV0aG9yX3RhYmxlcy5wdXNoKGF1dGhvcl90YWJsZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0LfQsNCz0YDRg9C30LrQtSDRgdC/0LjRgdC60LAg0YLQsNCx0LvQuNGGJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBlZGl0X3RhYmxlOiBmdW5jdGlvbiBlZGl0X3RhYmxlKHRhYmxlX2lkKSB7CiAgICAgIHN0b3JlLnN0YXRlLnNlbGVjdGVkX3RhYmxlX2lkID0gdGFibGVfaWQ7CiAgICAgIHJvdXRlci5wdXNoKCcvZWRpdF90YWJsZScpOwogICAgfSwKICAgIGRlbGV0ZV90YWJsZTogZnVuY3Rpb24gZGVsZXRlX3RhYmxlKHRhYmxlX2lkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgJ2FjdGlvbic6ICdkZWxldGVfdGFibGUnLAogICAgICAgICdwYXJhbXMnOiB7CiAgICAgICAgICAndGFibGVfaWQnOiB0YWJsZV9pZAogICAgICAgIH0KICAgICAgfTsKICAgICAgYXhpb3MoewogICAgICAgIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NjA2MC9hcGkvdGFibGVfY3JlYXRvci8nLAogICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgbWV0aG9kOiAnUE9TVCcKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICAgIGlmIChyZXNwLmRhdGEucmVzdWx0ID09PSAnb2snKSB7CiAgICAgICAgICBfdGhpczIuZmV0Y2hfdGFibGVzX2luZm8oKTsKCiAgICAgICAgICBfdGhpczIubWFrZV90b2FzdCgn0KPQtNCw0LvQtdC90LjQtScsICfQotCw0LHQu9C40YbQsCDRg9C00LDQu9C10L3QsCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwLmRhdGEucGFyYW1zLm1lc3NhZ2UpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlX2RvY3VtZW50OiBmdW5jdGlvbiBjcmVhdGVfZG9jdW1lbnQodGFibGVfaWQsIHRhYmxlX25hbWUsIGdyb3VwX251bWJlcikgewogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAnYWN0aW9uJzogJ2NyZWF0ZV9kb2N1bWVudCcsCiAgICAgICAgJ3BhcmFtcyc6IHsKICAgICAgICAgICd0YWJsZV9pZCc6IHRhYmxlX2lkCiAgICAgICAgfQogICAgICB9OwogICAgICBheGlvcyh7CiAgICAgICAgdXJsOiAnaHR0cDovL2xvY2FsaG9zdDo2MDYwL2FwaS90YWJsZV9jcmVhdG9yLycsCiAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICByZXNwb25zZVR5cGU6ICdibG9iJwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcCk7CiAgICAgICAgdmFyIGZpbGVVUkwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbcmVzcC5kYXRhXSkpOwogICAgICAgIHZhciBmaWxlTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICBmaWxlTGluay5ocmVmID0gZmlsZVVSTDsKICAgICAgICB2YXIgZmlsZV9uYW1lID0gdGFibGVfbmFtZSArICdfJyArIGdyb3VwX251bWJlciArICcueGxzJzsKICAgICAgICBmaWxlTGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgZmlsZV9uYW1lKTsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZpbGVMaW5rKTsKICAgICAgICBmaWxlTGluay5jbGljaygpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyBBZGRpdGlvbmFsIG1ldGhvZHMKICAgIGdldF9jb3JyZWN0X2RhdGU6IGZ1bmN0aW9uIGdldF9jb3JyZWN0X2RhdGUoZGF0ZV9zdHJpbmcpIHsKICAgICAgdmFyIGRhdGVPYmogPSBuZXcgRGF0ZShkYXRlX3N0cmluZyk7CiAgICAgIHZhciBtb250aCA9IHN0b3JlLnN0YXRlLm1vbnRoX25hbWVzW2RhdGVPYmouZ2V0TW9udGgoKV07CiAgICAgIHZhciBkYXkgPSBTdHJpbmcoZGF0ZU9iai5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJyk7CiAgICAgIHZhciB5ZWFyID0gZGF0ZU9iai5nZXRGdWxsWWVhcigpOwogICAgICB2YXIgaG91ciA9IGRhdGVPYmouZ2V0SG91cnMoKTsKICAgICAgdmFyIG1pbnV0ZXMgPSBTdHJpbmcoZGF0ZU9iai5nZXRNaW51dGVzKCkpLnBhZFN0YXJ0KDIsICcwJyk7CiAgICAgIHJldHVybiBob3VyICsgJzonICsgbWludXRlcyArICcsICcgKyBkYXkgKyAnICcgKyBtb250aCArICcsICcgKyB5ZWFyOwogICAgfSwKICAgIG1ha2VfdG9hc3Q6IGZ1bmN0aW9uIG1ha2VfdG9hc3QoZXZlbnRfdHlwZSwgbWVzc2FnZSkgewogICAgICB2YXIgYXBwZW5kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTsKICAgICAgdGhpcy4kYnZUb2FzdC50b2FzdChtZXNzYWdlLCB7CiAgICAgICAgdGl0bGU6IGV2ZW50X3R5cGUsCiAgICAgICAgYXV0b0hpZGVEZWxheTogMzAwMCwKICAgICAgICBhcHBlbmRUb2FzdDogYXBwZW5kCiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hfdGFibGVzX2luZm8oKTsKICB9Cn07"},{"version":3,"sources":["AllTables.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,UAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,aAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,iBAAA,EAAA;AAFA,KAAA;AAIA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,iBAAA,EAAA,6BAAA;AAAA;;AACA,UAAA,IAAA,GAAA;AAAA,kBAAA,SAAA;AAAA,QAAA,MAAA,EAAA;AAAA,0BAAA,KAAA,CAAA,KAAA,CAAA;AAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA;AAAA,QAAA,GAAA,EAAA,0CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,iBAAA,GAAA,EAAA;;AADA,qDAEA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,iBAFA;AAAA;;AAAA;AAEA,gEAAA;AAAA,kBAAA,KAAA;AACA,kBAAA,YAAA,GAAA,EAAA;AACA,cAAA,YAAA,CAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,CAAA;AACA,cAAA,YAAA,CAAA,YAAA,CAAA,GAAA,KAAA,CAAA,YAAA,CAAA;AACA,cAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,KAAA,CAAA,kBAAA,CAAA;AACA,cAAA,YAAA,CAAA,iBAAA,CAAA,GAAA,KAAA,CAAA,iBAAA,CAAA;AACA,cAAA,YAAA,CAAA,oBAAA,CAAA,GAAA,KAAA,CAAA,oBAAA,CAAA;AACA,cAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,KAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,CAAA;AACA,cAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,KAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,cAAA,KAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,YAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAaA,SAbA,MAaA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,mCAAA;AACA;AACA,OAlBA;AAoBA,KAvBA;AAwBA,IAAA,UAAA,EAAA,oBAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,iBAAA,GAAA,QAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,aAAA;AACA,KA3BA;AA4BA,IAAA,YAAA,EAAA,sBAAA,QAAA,EAAA;AAAA;;AACA,UAAA,IAAA,GAAA;AAAA,kBAAA,cAAA;AAAA,kBAAA;AAAA,sBAAA;AAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA;AAAA,QAAA,GAAA,EAAA,0CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,iBAAA;;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,UAAA,EAAA,iBAAA;AACA,SAHA,MAIA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA;AACA;AACA,OATA;AAUA,KAxCA;AAyCA,IAAA,eAAA,EAAA,yBAAA,QAAA,EAAA,UAAA,EAAA,YAAA,EAAA;AACA,UAAA,IAAA,GAAA;AAAA,kBAAA,iBAAA;AAAA,kBAAA;AAAA,sBAAA;AAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA;AAAA,QAAA,GAAA,EAAA,0CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,YAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,YAAA,QAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,QAAA,QAAA,CAAA,IAAA,GAAA,OAAA;AACA,YAAA,SAAA,GAAA,UAAA,GAAA,GAAA,GAAA,YAAA,GAAA,MAAA;AACA,QAAA,QAAA,CAAA,YAAA,CAAA,UAAA,EAAA,SAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,QAAA;AACA,QAAA,QAAA,CAAA,KAAA;AACA,OAVA,EAWA,KAXA,CAWA,UAAA,KAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AAAA,OAXA;AAYA,KAvDA;AAwDA;AACA,IAAA,gBAAA,EAAA,0BAAA,WAAA,EAAA;AACA,UAAA,OAAA,GAAA,IAAA,IAAA,CAAA,WAAA,CAAA;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,WAAA,CAAA,OAAA,CAAA,QAAA,EAAA,CAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,UAAA,IAAA,GAAA,OAAA,CAAA,WAAA,EAAA;AACA,UAAA,IAAA,GAAA,OAAA,CAAA,QAAA,EAAA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,OAAA,CAAA,UAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA,aAAA,IAAA,GAAA,GAAA,GAAA,OAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,GAAA,IAAA,GAAA,IAAA;AACA,KAjEA;AAkEA,IAAA,UAAA,EAAA,oBAAA,UAAA,EAAA,OAAA,EAAA;AAAA,UAAA,MAAA,uEAAA,KAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA,UADA;AAEA,QAAA,aAAA,EAAA,IAFA;AAGA,QAAA,WAAA,EAAA;AAHA,OAAA;AAKA;AAxEA,GAXA;AAqFA,EAAA,OArFA,qBAqFA;AACA,SAAA,iBAAA;AACA;AAvFA,CAAA","sourcesContent":["<template>\n    <div class=\"all-tables\">\n        <h2>Созданные ведомости</h2>\n        <div style=\"text-align: center\">\n            <b-card v-for=\"table in all_author_tables\" class=\"table-card\" :key=\"table.table_id\">\n                <b-card-title>\n                    <b>{{table.table_name}}, группа {{table.table_group_number}}</b>\n                </b-card-title>\n               <b-card-body style=\"text-align: left\">\n                   <b>Кафедра:</b> {{table.table_department}}<br/>\n                   <b>Направление:</b> {{ store.state.direction_decryption[table.table_direction ]}} <br/>\n                   <b>Создание:</b> {{table.table_created_at}} <br/>\n                   <b>Последнее редактирование:</b> {{table.table_updated_at}} <br/>\n               </b-card-body>\n               <b-card-footer>\n                   <b-btn squared variant=\"outline-dark\" class=\"action-button\" @click=\"edit_table(table.id)\">Редактировать</b-btn>\n                   <b-btn squared variant=\"outline-dark\" class=\"action-button\" @click=\"delete_table(table.id)\">Удалить</b-btn>\n                   <b-btn squared variant=\"outline-dark\" class=\"action-button\" @click=\"create_document(table.id, table.table_name, table.table_group_number)\">Скачать файл (.xls)</b-btn>\n               </b-card-footer>\n            </b-card>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n    import router from '../router/index'\n    import TableEditView from \"../views/TableEditView\";\n\n    export default {\n        name: \"AllTables\",\n        components: {\n            TableEditView\n        },\n        data() {\n            return{\n                store: store,\n                all_author_tables: [],\n            }\n        },\n        methods: {\n            fetch_tables_info: function () {\n                let data = {'action': 'get_all', params: {'author-token': store.state.token}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.all_author_tables = []\n                        for (let table of resp.data.params.all_author_tables) {\n                            let author_table = {}\n                            author_table['id'] = table['id']\n                            author_table['table_name'] = table['table_name']\n                            author_table['table_department'] = table['table_department']\n                            author_table['table_direction'] = table['table_direction']\n                            author_table['table_group_number'] = table['table_group_number']\n                            author_table['table_created_at'] = this.get_correct_date(table['table_created_at'])\n                            author_table['table_updated_at'] = this.get_correct_date(table['table_updated_at'])\n                            this.all_author_tables.push(author_table)\n                        }\n                    } else {\n                        console.log('Ошибка при загрузке списка таблиц')\n                    }\n                })\n\n            },\n            edit_table: function (table_id) {\n                store.state.selected_table_id = table_id\n                router.push('/edit_table')\n            },\n            delete_table: function (table_id) {\n                let data = {'action': 'delete_table', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.fetch_tables_info()\n                        this.make_toast('Удаление', 'Таблица удалена')\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            create_document: function (table_id, table_name, group_number) {\n                let data = {'action': 'create_document', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST', responseType: 'blob'})\n                    .then(resp => {\n                             console.log(resp)\n                             var fileURL = window.URL.createObjectURL(new Blob([resp.data]));\n                             var fileLink = document.createElement('a');\n                             fileLink.href = fileURL;\n                             let file_name = table_name + '_' + group_number + '.xls'\n                             fileLink.setAttribute('download', file_name);\n                             document.body.appendChild(fileLink);\n                             fileLink.click();\n                    })\n                .catch(error => (console.log(error)))\n            },\n            // Additional methods\n            get_correct_date: function (date_string) {\n                 let dateObj = new Date(date_string)\n                 let month = store.state.month_names[dateObj.getMonth()];\n                 let day = String(dateObj.getDate()).padStart(2, '0');\n                 let year = dateObj.getFullYear();\n                 let hour = dateObj.getHours();\n                 let minutes = String(dateObj.getMinutes()).padStart(2, '0')\n                 return hour + ':' + minutes + ', ' + day + ' ' + month + ', ' + year\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 3000,\n                    appendToast: append\n                })\n            },\n        },\n        created() {\n            this.fetch_tables_info()\n        }\n    }\n</script>\n\n<style scoped>\n    .table-card {\n        width: 40vw;\n        position: relative;\n        margin: auto;\n        margin-top: 30px;\n    }\n    .action-button {\n        margin-right: 10px;\n        margin-left: 10px;\n    }\n</style>"],"sourceRoot":"src/components"}]}