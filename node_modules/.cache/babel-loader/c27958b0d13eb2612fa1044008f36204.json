{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue","mtime":1589459751699},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TableGenerator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"table-generator\">\n        <b-card class=\"mt-3\">\n            <b-card-body style=\"text-align: center\">\n                <b-form-group class=\"mb-3\">\n                    <b-form-select style=\"width: 14vw; display: inline\" class=\"mr-3\" v-model=\"choosed_column_type\">\n                        <template v-slot:first>\n                            <b-form-select-option :value=\"''\" disabled>-- Тип Контрольной точки --</b-form-select-option>\n                        </template>\n                        <b-form-select-option v-for=\"type in store.state.col_types\" :key=\"type\" v-bind:value=\"type\">{{type}}</b-form-select-option>\n                    </b-form-select>\n\n                    <b-form-input style=\"width: 12vw; display: inline\" v-model=\"custom_column_type\" v-if=\"choosed_column_type === 'Свой вариант'\" type='text' placeholder='Укажите свой вариант'/>\n\n                    <b-form-select style=\"width: 16vw; display: inline\" class=\"ml-3\" v-model=\"choosed_calc_option\" @change=\"calc_all_final_grades\">\n                        <template v-slot:first>\n                            <b-form-select-option :value=\"''\">-- Расчёт итоговой оценки (откл) --</b-form-select-option>\n                        </template>\n                        <b-form-select-option v-for=\"option in final_grade_calc_options\" :key=\"option.value\" v-bind:value=\"option.value\">{{option.text}}</b-form-select-option>\n                    </b-form-select>\n                </b-form-group>\n                <b-form-group>\n                    <b-button squared variant=\"outline-dark\" @click=\"add_column\" class=\"mr-3\">Добавить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"delete_column\" class=\"mr-3\">Удалить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"save_table\" class=\"mr-3\">Сохранить таблицу</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"create_document(table_id, table_name, table_group_number)\" class=\"mr-3\">Скачать файл (.xls)</b-button>\n                </b-form-group>\n            </b-card-body>\n        </b-card>\n        <b-card class=\"mt-1\">\n            <b-card-body>\n                <div class=\"table-wrapper\">\n                    <table border=\"2\" style=\"margin: auto\" ref=\"grades_table\">\n                        <thead>\n                            <tr>\n                                <th rowspan=\"2\">\n                                    ФИО\n                                </th>\n                                <th v-for=\"(num, name) in grades_types\" :key=\"name\" :colspan=\"num\" class=\"table-head-cell\">\n                                    {{name}}\n                                </th>\n                            </tr>\n                            <tr>\n                                <template v-for=\"(num, name) in grades_types\">\n                                    <th v-for=\"n in num\" class=\"table-grade-cell\">\n                                        № {{n}}\n                                    </th>\n                                </template>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr v-for=\"student in students\">\n                               <td class=\"table-fio-cell\" align=\"left\">\n                                    {{student.fio}}\n                               </td>\n                                <template v-for=\"grade_type in student.grades\">\n                                    <td v-for=\"grade in grade_type\">\n                                        <div v-show=\"current_grade !== grade.id\">\n                                            <span @mouseenter=\"current_grade = grade.id\" class=\"grade-span\">{{grade.grade_value}}</span>\n                                        </div>\n                                        <b-input class=\"grade-input\"\n                                                 v-show=\"current_grade === grade.id\"\n                                                 v-model=\"grade.grade_value\"\n                                                 @change=\"student.grades['\\u05C4Итог'][0].grade_value = final_grade_calc(student)\"\n                                                 @mouseleave=\"current_grade = ''\"\n                                                 @keyup.enter=\"current_grade = ''\"/>\n                                    </td>\n                                </template>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </b-card-body>\n\n        </b-card>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n\n    export default {\n        name: \"TableGenerator\",\n        components: {\n        },\n        props: ['table_data'],\n        data() {\n            return {\n                store: store,\n                table_id: '',\n                table_name: '',\n                table_group_number: '',\n                students: '',\n                grades_types: '',\n\n                selected_column_type: '',\n                choosed_column_type: '',\n                custom_column_type: '',\n                current_grade: '',\n\n                final_grade_calc_options: [\n                    {value: 'average', text: 'Средний балл'},\n                    {value: 'sum', text: 'Сумма баллов'},\n                ],\n                choosed_calc_option: '',\n\n                // unfilled_as_zero: false\n            }\n        },\n        methods: {\n            add_column: function () {\n                let _t = this\n\n                if (_t.choosed_column_type === 'Свой вариант') {\n                    if (_t.custom_column_type !== '') {\n                        _t.selected_column_type = _t.custom_column_type\n                    }\n                }\n                else {_t.selected_column_type = _t.choosed_column_type}\n\n                for (let [key, value] of Object.entries(_t.grades_types)) {\n                    if (key === this.selected_column_type) {\n                        _t.grades_types[key] +=1\n                    }\n                }\n                if (_t.grades_types[_t.selected_column_type] === undefined) {\n                    _t.$set(_t.grades_types, _t.selected_column_type, 1)\n\n                    let ordered_types = {}\n                    Object.keys(_t.grades_types).sort().forEach(function(key) {\n                        ordered_types[key] = _t.grades_types[key];\n                    })\n                    _t.grades_types = ordered_types\n                    /*\n                    let students_with_sorted_grades = []\n                    for (let student of this.students) {\n                        let ordered_types_for_student = {}\n                        Object.keys(student.grades).sort().forEach(function(key) {\n                        ordered_types_for_student[key] = student.grades[key];\n                        })\n                        student.grades = ordered_types_for_student\n                        students_with_sorted_grades.push(student)\n                    }\n                    this.students = students_with_sorted_grades\n                    */\n                }\n\n                let data = {action: 'add_column', params: {table_id: _t.table_id, column_type: _t.selected_column_type}}\n                axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        let new_grades = resp.data.params.new_grades\n                        for (let student of _t.students) {\n                            if (!(_t.selected_column_type in student.grades)) {\n                                _t.$set(student.grades, _t.selected_column_type, [])\n                            }\n                            student.grades[_t.selected_column_type].push(new_grades[student.id])\n                            //\n                            let students_with_sorted_grades = []\n                            for (let student of this.students) {\n                                let ordered_types_for_student = {}\n                                Object.keys(student.grades).sort().forEach(function(key) {\n                                ordered_types_for_student[key] = student.grades[key];\n                                })\n                                student.grades = ordered_types_for_student\n                                students_with_sorted_grades.push(student)\n                            }\n                            this.students = students_with_sorted_grades\n                            //\n                        }\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n            },\n            delete_column: function () {\n                var _t = this\n\n                if (_t.choosed_column_type === 'Свой вариант') {\n                    if (_t.custom_column_type !== '') {\n                        _t.selected_column_type = _t.custom_column_type\n                    }\n                }\n                else {_t.selected_column_type = _t.choosed_column_type}\n\n                if (_t.selected_column_type in _t.grades_types) {\n                     let deleted_grades_ids = []\n                     for (let student of _t.students) {\n                         let last_grade_in_type = student.grades[_t.selected_column_type][student.grades[_t.selected_column_type].length - 1]\n                         let last_grade_in_type_id = last_grade_in_type.id\n                         deleted_grades_ids.push(last_grade_in_type_id)\n                     }\n                     let data = {action: 'delete_column', params: {table_id: _t.table_id, grades_ids: deleted_grades_ids}}\n                     axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                    .then(resp => {\n                        if (resp.data.result === 'ok') {\n                            for (let student of _t.students) {\n                                student.grades[_t.selected_column_type].pop()\n                                if (student.grades[_t.selected_column_type] <= 0) delete student.grades[_t.selected_column_type]\n                            }\n                            for (let [key, value] of Object.entries(_t.grades_types)) {\n                                if (key === _t.selected_column_type) {\n                                    _t.grades_types[key] -=1\n                                    if (_t.grades_types[key] <= 0) {\n                                        delete _t.grades_types[key]\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            console.log(resp.data.params.message)\n                        }\n                    })\n                }\n            },\n            final_grade_calc: function (student) {\n              if (this.choosed_calc_option === '') {return student.grades['\\u05C4Итог'][0].grade_value}\n              let final_grade = 0\n              let grades_count = 0\n              for (let [grade_type, grades_array] of Object.entries(student.grades)) {\n                  for (let grade of grades_array) {\n                      if (grade.grade_value !== null && grade.grade_value !== '' && grade_type !== '\\u05C4Итог') {\n                         let grade_int = Number.parseInt(grade.grade_value)\n                         final_grade += grade_int\n                         grades_count +=1\n                      }\n                  }\n              }\n              if (this.choosed_calc_option === 'average') {final_grade = Math.round(final_grade / grades_count)}\n              if (this.choosed_calc_option === 'sum') {}\n\n              return isNaN(final_grade) ? 0 : final_grade\n            },\n            calc_all_final_grades: function() {\n              if (this.choosed_calc_option !== '') {\n                for (let student of this.students) {\n                  student.grades['\\u05C4Итог'][0].grade_value = this.final_grade_calc(student)\n                }\n              }\n            },\n            save_table: function() {\n                let all_grades = {}\n                for (let student of this.students) {\n                    for (let type in student.grades) {\n                        for (let grade of student.grades[type])\n                        all_grades[grade.id] = grade.grade_value\n                    }\n                }\n              let data = {action: 'save_table', params: {table_id: this.table_id, all_grades: all_grades}}\n              axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.make_toast('Сохранение', 'Таблица сохранена')\n                    }\n                    else {\n                        this.make_toast('Сохранение', 'Ошибка при сохранении')\n                        console.log(resp.data.params.message)\n                    }\n                })\n\n            },\n            create_document: function (table_id, table_name, group_number) {\n                this.save_table()\n                let data = {'action': 'create_document', 'params': {'table_id': table_id}}\n                axios({url: 'http://localhost:6060/api/table_creator/', data: data, method: 'POST', responseType: 'blob'})\n                .then(resp => {\n                    console.log(resp)\n                    var fileURL = window.URL.createObjectURL(new Blob([resp.data]));\n                    var fileLink = document.createElement('a');\n                    fileLink.href = fileURL;\n                    let file_name = table_name + '_' + group_number + '.xls'\n                    fileLink.setAttribute('download', file_name);\n                    document.body.appendChild(fileLink);\n                    fileLink.click();\n                })\n                .catch(error => (console.log(error)))\n            },\n            //additional functions\n            compare_grades: function (a, b) {\n                if (a.grade_type < b.grade_type)\n                    return -1\n                if (a.grade_type > b.grade_type)\n                    return 1\n                return 0\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 5000,\n                    appendToast: append\n                })\n            }\n        },\n        created() {\n            this.table_id = this.table_data.id\n            this.table_name = this.table_data.table_name\n            this.table_group_number = this.table_data.table_group_number\n            this.students = this.table_data.students_and_grades\n            this.grades_types = this.table_data.grades_types\n        }\n    }\n\n\n</script>\n\n<style scoped>\n    .table-wrapper {\n        margin-top: 30px;\n    }\n    .table-grade-cell {\n        min-width: 50px;\n    }\n    .table-head-cell {\n        padding: 5px;\n    }\n    .table-fio-cell {\n        padding-left: 5px;\n        padding-right: 5px;\n    }\n    table {\n        overflow: hidden;\n    }\n    tr:hover {\n        background-color: #e4fffa;\n    }\n\n    td:hover::after,\n    th:hover::after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      top: -5000px;\n      height: 100px;\n      width: 100%;\n      z-index: -1;\n    }\n\n    .grade-span {\n        display: block;\n        box-sizing: border-box;\n        width: 100%;\n        height: 25px;\n    }\n\n    .grade-input {\n        position: center;\n        width: 50px;\n        height: 25px;\n    }\n</style>"],"sourceRoot":"src/components"}]}