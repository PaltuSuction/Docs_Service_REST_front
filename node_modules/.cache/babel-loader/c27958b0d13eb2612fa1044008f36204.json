{"remainingRequest":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/src/components/TableGenerator.vue","mtime":1588803358833},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/paltus/PycharmProjects/Docs_Service_REST_v2/tablegenfront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TableGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,KAAA,EAAA,CAAA,YAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,oBAAA,EAAA,EALA;AAOA,MAAA,aAAA,EAAA;AAPA,KAAA;AASA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,sBAAA;AACA,UAAA,EAAA,GAAA,IAAA;;AACA,yCAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,YAAA,CAAA,qCAAA;AAAA;AAAA,YAAA,GAAA;AAAA,YAAA,KAAA;;AACA,YAAA,GAAA,KAAA,KAAA,oBAAA,EAAA;AACA,UAAA,EAAA,CAAA,YAAA,CAAA,GAAA,KAAA,CAAA;AACA,SAHA,CAIA;;AACA;;AACA,UAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,oBAAA,MAAA,SAAA,EAAA;AACA;AACA,QAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,YAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA;AACA;;AACA,UAAA,IAAA,GAAA;AAAA,QAAA,MAAA,EAAA,YAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,QAAA,EAAA,EAAA,CAAA,QAAA;AAAA,UAAA,WAAA,EAAA,EAAA,CAAA;AAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA;AAAA,QAAA,GAAA,4CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,cAAA,UAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,UAAA;;AADA,qDAEA,EAAA,CAAA,QAFA;AAAA;;AAAA;AAEA,gEAAA;AAAA,kBAAA,OAAA;;AACA,kBAAA,EAAA,EAAA,CAAA,oBAAA,IAAA,OAAA,CAAA,MAAA,CAAA,EAAA;AACA;AACA,gBAAA,EAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA;AACA;;AACA,cAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,IAAA,CAAA,UAAA,CAAA,OAAA,CAAA,EAAA,CAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AASA,SATA,MAUA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA;AACA;AACA,OAfA;AAiBA;;;;AAIA,KAnCA;AAoCA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,EAAA,GAAA,IAAA;;AACA,UAAA,EAAA,CAAA,oBAAA,IAAA,EAAA,CAAA,YAAA,EAAA;AACA,6CAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,YAAA,CAAA,wCAAA;AAAA;AAAA,cAAA,GAAA;AAAA,cAAA,KAAA;;AACA,cAAA,GAAA,KAAA,EAAA,CAAA,oBAAA,EAAA;AACA,YAAA,EAAA,CAAA,YAAA,CAAA,GAAA,KAAA,CAAA;;AACA,gBAAA,EAAA,CAAA,YAAA,CAAA,GAAA,KAAA,CAAA,EAAA;AACA,qBAAA,EAAA,CAAA,YAAA,CAAA,GAAA,CAAA;AACA;AACA;AACA;;AACA,YAAA,kBAAA,GAAA,EAAA;;AATA,oDAUA,EAAA,CAAA,QAVA;AAAA;;AAAA;AAUA,iEAAA;AAAA,gBAAA,OAAA;AACA,gBAAA,kBAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,MAAA,GAAA,CAAA,CAAA;AACA,gBAAA,qBAAA,GAAA,kBAAA,CAAA,EAAA;AACA,YAAA,kBAAA,CAAA,IAAA,CAAA,qBAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;;AAeA,YAAA,IAAA,GAAA;AAAA,UAAA,MAAA,EAAA,eAAA;AAAA,UAAA,MAAA,EAAA;AAAA,YAAA,QAAA,EAAA,EAAA,CAAA,QAAA;AAAA,YAAA,UAAA,EAAA;AAAA;AAAA,SAAA;AACA,QAAA,KAAA,CAAA;AAAA,UAAA,GAAA,4CAAA;AAAA,UAAA,IAAA,EAAA,IAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,cAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AAAA,wDACA,EAAA,CAAA,QADA;AAAA;;AAAA;AACA,qEAAA;AAAA,oBAAA,OAAA;;AACA,gBAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,GAAA;;AACA,oBAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,KAAA,CAAA,EAAA,OAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,oBAAA,CAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAKA,WALA,MAMA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA;AACA;AACA,SAXA;AAYA;AACA,KAnEA;AAoEA,IAAA,UAAA,EAAA,sBAAA;AAAA;;AACA,UAAA,UAAA,GAAA,EAAA;;AADA,kDAEA,KAAA,QAFA;AAAA;;AAAA;AAEA,+DAAA;AAAA,cAAA,OAAA;;AACA,eAAA,IAAA,IAAA,IAAA,OAAA,CAAA,MAAA,EAAA;AAAA,wDACA,OAAA,CAAA,MAAA,CAAA,IAAA,CADA;AAAA;;AAAA;AACA;AAAA,oBAAA,KAAA;AACA,gBAAA,UAAA,CAAA,KAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,WAAA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;;AAQA,UAAA,IAAA,GAAA;AAAA,QAAA,MAAA,EAAA,YAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,QAAA,EAAA,KAAA,QAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA;AAAA,QAAA,GAAA,4CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,UAAA,KAAA,CAAA,UAAA,CAAA,YAAA,EAAA,mBAAA;AACA,SAFA,MAGA;AACA,UAAA,KAAA,CAAA,UAAA,CAAA,YAAA,EAAA,uBAAA;;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA;AACA;AACA,OATA;AAWA,KAxFA;AAyFA;AACA,IAAA,cAAA,EAAA,wBAAA,CAAA,EAAA,CAAA,EAAA;AACA,UAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,EACA,OAAA,CAAA,CAAA;AACA,UAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,UAAA,EACA,OAAA,CAAA;AACA,aAAA,CAAA;AACA,KAhGA;AAiGA,IAAA,UAAA,EAAA,oBAAA,UAAA,EAAA,OAAA,EAAA;AAAA,UAAA,MAAA,uEAAA,KAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA,UADA;AAEA,QAAA,aAAA,EAAA,IAFA;AAGA,QAAA,WAAA,EAAA;AAHA,OAAA;AAKA;AAvGA,GAfA;AAwHA,EAAA,OAxHA,qBAwHA;AACA,SAAA,QAAA,GAAA,KAAA,UAAA,CAAA,EAAA;AACA,SAAA,QAAA,GAAA,KAAA,UAAA,CAAA,mBAAA;AACA,SAAA,YAAA,GAAA,KAAA,UAAA,CAAA,YAAA;AACA;AA5HA,CAAA","sourcesContent":["<template>\n    <div class=\"table-generator\">\n        <p>GENERATOR PLACEHOLDER</p>\n        <b-card>\n            <b-card-body>\n                <b-form-group>\n                    <b-form-select v-model=\"selected_column_type\" style=\"width: 14vw\">\n                         <b-form-select-option v-for=\"type in store.state.col_types\" v-bind:value=\"type\">{{type}}</b-form-select-option>\n                    </b-form-select>\n                    <b-button squared variant=\"outline-dark\" @click=\"add_column\" class=\"ml-3\">Добавить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"delete_column\" class=\"ml-3\">Удалить столбец</b-button>\n                    <b-button squared variant=\"outline-dark\" @click=\"save_table\" class=\"ml-3\">Сохранить таблицу</b-button>\n                </b-form-group>\n            </b-card-body>\n        </b-card>\n        <b-card>\n            <b-card-body>\n                <div class=\"table-wrapper\">\n\n                    <table border=\"2\" style=\"margin: auto\" ref=\"grades_table\">\n                        <thead>\n                            <tr>\n                                <th rowspan=\"2\">\n                                    ФИО\n                                </th>\n                                <th v-for=\"(num, name) in grades_types\" :key=\"name\" :colspan=\"num\" class=\"table-head-cell\">\n                                    {{name}}\n                                </th>\n                            </tr>\n                            <tr>\n                                <template v-for=\"(num, name) in grades_types\">\n                                    <th v-for=\"n in num\" class=\"table-grade-cell\">\n                                        № {{n}}\n                                    </th>\n                                </template>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr v-for=\"student in students\">\n                               <td class=\"table-fio-cell\">\n                                    {{student.fio}}\n                               </td>\n                                <template v-for=\"grade_type in student.grades\">\n                                    <td v-for=\"grade in grade_type\">\n                                        <div v-show=\"current_grade !== grade.id\">\n                                            <span @click=\"current_grade = grade.id\" class=\"grade-span\">{{grade.grade_value}}</span>\n                                        </div>\n                                        <b-input class=\"grade-input\"\n                                                 v-show=\"current_grade === grade.id\"\n                                                 v-model=\"grade.grade_value\"\n                                                 @blur=\"current_grade = ''\"\n                                                 @keyup.enter=\"current_grade = ''\"/>\n                                    </td>\n                                </template>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </b-card-body>\n\n        </b-card>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import store from '../store'\n\n    export default {\n        name: \"TableGenerator\",\n        components: {},\n        props: ['table_data'],\n        data() {\n            return {\n                store: store,\n                table_id: '',\n                students: '',\n                grades_types: '',\n                selected_column_type: '',\n\n                current_grade: '',\n            }\n        },\n        methods: {\n            add_column: function () {\n                let _t = this\n                for (let [key, value] of Object.entries(_t.grades_types)) {\n                    if (key === this.selected_column_type) {\n                        _t.grades_types[key] +=1\n                    }\n                    // console.log(key, value)\n                }\n                if (_t.grades_types[_t.selected_column_type] === undefined) {\n                    // _t.grades_types[_t.selected_column_type] = 1\n                    _t.$set(_t.grades_types, _t.selected_column_type, 1)\n                }\n                let data = {action: 'add_column', params: {table_id: _t.table_id, column_type: _t.selected_column_type}}\n                axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        let new_grades = resp.data.params.new_grades\n                        for (let student of _t.students) {\n                            if (!(_t.selected_column_type in student.grades)) {\n                                // student.grades[_t.selected_column_type] = []\n                                _t.$set(student.grades, _t.selected_column_type, [])\n                            }\n                            student.grades[_t.selected_column_type].push(new_grades[student.id])\n                        }\n                    }\n                    else {\n                        console.log(resp.data.params.message)\n                    }\n                })\n\n                /*for (let student of this.students) {\n                    student.grades[this.selected_column_type].push({grade_type: this.selected_column_type, grade_value: null})\n                    student.grades[this.selected_column_type].sort(this.compare_grades)\n                } */\n            },\n            delete_column: function () {\n                var _t = this\n                if (_t.selected_column_type in _t.grades_types) {\n                     for (let [key, value] of Object.entries(_t.grades_types)) {\n                        if (key === _t.selected_column_type) {\n                            _t.grades_types[key] -=1\n                            if (_t.grades_types[key] <= 0) {\n                                delete _t.grades_types[key]\n                            }\n                        }\n                    }\n                     let deleted_grades_ids = []\n                     for (let student of _t.students) {\n                         let last_grade_in_type = student.grades[_t.selected_column_type][student.grades[_t.selected_column_type].length - 1]\n                         let last_grade_in_type_id = last_grade_in_type.id\n                         deleted_grades_ids.push(last_grade_in_type_id)\n                     }\n                     let data = {action: 'delete_column', params: {table_id: _t.table_id, grades_ids: deleted_grades_ids}}\n                     axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                    .then(resp => {\n                        if (resp.data.result === 'ok') {\n                            for (let student of _t.students) {\n                                student.grades[_t.selected_column_type].pop()\n                                if (student.grades[_t.selected_column_type] <= 0) delete student.grades[_t.selected_column_type]\n                            }\n                        }\n                        else {\n                            console.log(resp.data.params.message)\n                        }\n                    })\n                }\n            },\n            save_table: function() {\n                let all_grades = {}\n                for (let student of this.students) {\n                    for (let type in student.grades) {\n                        for (let grade of student.grades[type])\n                        all_grades[grade.id] = grade.grade_value\n                    }\n                }\n              let data = {action: 'save_table', params: {table_id: this.table_id, all_grades: all_grades}}\n              axios({url: `http://localhost:6060/api/table_creator/`, data: data, method: 'POST'})\n                .then(resp => {\n                    if (resp.data.result === 'ok') {\n                        this.make_toast('Сохранение', 'Таблица сохранена')\n                    }\n                    else {\n                        this.make_toast('Сохранение', 'Ошибка при сохранении')\n                        console.log(resp.data.params.message)\n                    }\n                })\n\n            },\n            //additional functions\n            compare_grades: function (a, b) {\n                if (a.grade_type < b.grade_type)\n                    return -1\n                if (a.grade_type > b.grade_type)\n                    return 1\n                return 0\n            },\n            make_toast: function (event_type, message, append=false) {\n                this.$bvToast.toast(message, {\n                    title: event_type,\n                    autoHideDelay: 5000,\n                    appendToast: append\n                })\n            }\n        },\n        created() {\n            this.table_id = this.table_data.id\n            this.students = this.table_data.students_and_grades\n            this.grades_types = this.table_data.grades_types\n        }\n    }\n\n\n</script>\n\n<style scoped>\n    .table-wrapper {\n        margin-top: 30px;\n    }\n    .table-grade-cell {\n        min-width: 50px;\n    }\n    .table-head-cell {\n        padding: 5px;\n    }\n    .table-fio-cell {\n        padding-left: 5px;\n        padding-right: 5px;\n    }\n    table {\n        overflow: hidden;\n    }\n    tr:hover {\n        background-color: #e4fffa;\n    }\n\n    td:hover::after,\n    th:hover::after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      top: -5000px;\n      height: 100px;\n      width: 100%;\n      z-index: -1;\n    }\n\n    .grade-span {\n        display: block;\n        box-sizing: border-box;\n        width: 100%;\n        height: 22px;\n    }\n    .grade-input {\n        text-align: center;\n        width: 30%;\n        max-height: 25px;\n    }\n</style>"],"sourceRoot":"src/components"}]}